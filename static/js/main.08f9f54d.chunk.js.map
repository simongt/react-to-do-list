{"version":3,"sources":["components/SVGIcon.js","components/layout/Header.js","components/ListItem.js","components/AddItem.js","components/List.js","components/AddList.js","components/SeedLists.js","components/Lists.js","components/App.js","index.js"],"names":["getViewBox","name","SVGIcon","_ref","_ref$name","_ref$style","style","_ref$fill","fill","_ref$viewBox","viewBox","_ref$width","width","_ref$className","className","_ref$height","height","react_default","a","createElement","xmlns","xmlnsXlink","props","Fragment","Object","assign","d","getPath","Header","_Component","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","componentDidMount","_this$state","state","date","daysOfWeek","months","setState","dayOfWeek","getDay","dayOfMonth","getDate","month","getMonth","year","getFullYear","time","getTime","hours","getHours","minutes","getMinutes","Date","inherits","createClass","key","value","_this$state2","borderLeft","borderRight","float","marginLeft","color","fontSize","margin","padding","textIndent","paddingTop","lineHeight","borderBottom","components_SVGIcon","marginBottom","marginRight","Component","ListItem","crossOutCompletedItems","item","isComplete","scribbleOutItem","unscribbleOutItem","toggleInputMode","prevState","inputModeEnabled","updateItemDescription","event","editItem","id","refs","itemDescription","description","handleKeyPress","renderItemDescriptionInputMode","display","paddingLeft","paddingBottom","type","defaultValue","ref","autoFocus","flex","border","outline","background","fontFamily","marginTop","onKeyPress","cursor","onClick","renderItemDescription","trim","_this$props","toggleItemCompletion","deleteItem","disabled","onChange","textDecoration","textDecorationStyle","textDecorationColor","WebkitTextDecorationColor","transition","AddItem","defineProperty","target","onSubmit","preventDefault","addItem","placeholder","list","label","insertNewItemStyle","insertNewItemFormStyle","insertNewItemInputStyle","insertButtonStyle","List","updateListLabel","editList","listLabel","renderListLabelInputMode","renderListLabel","deleteList","_this$props$list","items","listStyle","map","components_ListItem","components_AddItem","AddList","addList","insertNewListStyle","insertNewListFormStyle","insertNewListInputStyle","seed","uuid","v4","Lists","listId","itemId","lists","toConsumableArray","filter","newList","concat","newItem","updatedItem","forEach","localStorage","getItem","_this2","components_AddList","components_List","App","layout_Header","components_Lists","ReactDOM","render","src_components_App","document","getElementById"],"mappings":"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","file":"static/js/main.08f9f54d.chunk.js","sourcesContent":["import React from \"react\";\n\nconst getViewBox = name => {\n  switch (name) {\n    case \"trash\":\n      return \"-3.377 0 32 32\";\n    case \"add\":\n      return \"0 0 31.714 32\";\n    case \"pencil\":\n      return \"0 0 31.311 31.92\";\n    case \"pencil-and-paper\":\n      return \"0 0 17.503 32\";\n    case \"checkmark\":\n      return \"0 0 32 32\";\n    case \"x\":\n      return \"0 0 28.246 32\";\n    default:\n      return \"0 0 32 32\";\n  }\n};\n\nconst getPath = (name, props) => {\n  switch (name) {\n    case \"trash\":\n      return (\n        <>\n          <path\n            {...props}\n            d=\"M24.752,3.076C24.296,2.43,20.25,2.283,15.58,2.424c0.092-0.661,0.243-2.061-0.051-2.333\n            c-0.389-0.36-5.514,0.436-5.812,0.908C9.52,1.317,9.589,2.192,9.655,2.733c-4.782,0.351-8.934,0.91-9.284,1.455\n            c-0.834,1.298,0,3.894,0,3.894s6.984-0.495,11.774-0.464c4.789,0.031,12.606,0.464,12.606,0.464S25.863,4.652,24.752,3.076z\"\n          />\n          <path\n            {...props}\n            d=\"M22.744,10.06c-0.495-0.556-19.405-0.494-19.9,0c-0.446,0.446-0.59,16.514,0.021,20.258c0,0,0.037,1.002,0.586,1.471\n            C4,32.255,22.803,31.91,23.201,31.164c0.142-0.264,0.229-0.535,0.291-0.789c0.031-0.062,0.057-0.195,0.076-0.393\n            c0.054-0.361,0.045-0.621,0.045-0.621C23.805,25.257,23.178,10.549,22.744,10.06z M4.92,30.425\n            c-0.066-4.071-0.229-15.387,0.024-15.792c0.31-0.494,2.658-0.371,2.968,0c0.243,0.293,0.449,11.279,0.524,15.871\n            C7.045,30.494,5.846,30.46,4.92,30.425z M11.454,30.496c-0.1-4.01-0.354-15.456,0.036-15.863c0.474-0.494,3.162-0.371,3.636,0\n            c0.367,0.289,0.679,10.938,0.799,15.65C14.023,30.412,13.107,30.475,11.454,30.496z M18.271,30.091\n            c-0.069-4.325-0.217-15.063,0.029-15.458c0.311-0.494,2.657-0.371,2.969,0c0.229,0.276,0.426,10.068,0.51,15.031\n            C20.611,29.837,19.438,29.979,18.271,30.091z\"\n          />\n        </>\n      );\n    case \"add\":\n      return (\n        <>\n          <path\n            {...props}\n            d=\"M31.714,10.039L20.41 11.675 21.024 0 9.866 2.736 10.537 13.104 0 14.629 0.689 22.177 11.107 21.9 11.761 32 19.339 32 19.884 21.668 30.003 21.4 z\"\n          />\n        </>\n      );\n    case \"pencil\":\n      return (\n        <>\n          <path\n            {...props}\n            d=\"M2.209,26.569c0,0-1.078,3.32-2.209,4.479c0,0,0.338,0.357,1.209,0.869c0,0,2.237-2.312,3.438-3.133\n            C4.648,28.787,4.301,26.084,2.209,26.569z\"\n          />\n          <path\n            {...props}\n            d=\"M30.305,4.062C26.391-3.411,19.98,1.715,19.98,1.715c8.543,2.505,7.371,13.036,7.371,13.036\n            C33.951,10.838,30.305,4.062,30.305,4.062z\"\n          />\n          <path\n            {...props}\n            d=\"M14.096,19.202c2.027-2.604,12.12-8.984,12.133-8.992c-0.438-1.187-0.944-2.162-1.488-2.966\n            c-2.797,1.178-13.249,9.877-13.249,9.877c3.717-4.964,12.103-11.259,12.116-11.27c-2.716-2.761-5.761-2.262-5.761-2.262\n            C12.734,8.257,6.18,16.194,3.714,19.244c-0.312,0.356-0.645,0.771-1.001,1.247c0,0,2.854-2.358,3.785-1.207\n            c0.934,1.152,0.657,3.457,0.657,3.457s1.865-2.358,2.964-1.152c1.097,1.206,0.383,2.854,0,3.291c0,0,1.59-1.591,1.92-0.986\n            c0.328,0.604,0.054,1.976-0.935,3.235c0,0,0.183-0.21,0.437-0.537c7.552-9.265,15.812-11.841,15.812-11.841\n            c-0.166-1.094-0.377-2.079-0.621-2.972C22.965,13.326,14.096,19.202,14.096,19.202z\"\n          />\n          <path\n            {...props}\n            d=\"M11.408,24.88c-0.057-0.438-1.289,0-1.289,0c0.19-0.438-0.083-1.617-0.604-2.275c-0.521-0.657-2.359,0.139-2.359,0.139\n            c0-0.551-0.739-1.947-1.562-2.524c-0.821-0.573-2.88,0.274-2.88,0.274c0.356,3.1-0.504,6.076-0.504,6.076\n            c4.367-1.647,2.438,2.22,2.438,2.22c2.881-1.698,6.457-1.658,6.457-1.658C11.929,25.729,11.408,24.88,11.408,24.88z\"\n          />\n        </>\n      );\n    case \"pencil-and-paper\":\n      return (\n        <>\n          <path\n            {...props}\n            d=\"M12.656,7.88L12.634 14.422 17.503 14.915z\"\n          />\n          <path\n            {...props}\n            d=\"M5.81,17.688c0,0,0.969,0.402,1.325,0c0,0,0.356-2.646,2.141-4.291V2.249c0,0-0.662-2.396-3.109-2.242\n            c-2.446,0.152-2.65,2.345-2.65,2.345s0.023,0.32,0.053,0.88c1.181,0.329,3.094,0.547,5.196-0.474c0,0-1.896,2.072-5.15,1.429\n            c0.087,2.07,0.164,5.62-0.1,9.21C3.516,13.397,5.351,14.931,5.81,17.688z\"\n                    />\n          <path\n            {...props}\n            d=\"M11.634,7.88h-1.575v6.062c-2.265,1.823-2.341,4.637-2.341,4.637c-0.453,0.444-2.406-0.097-2.406-0.097\n            c-0.582-3.057-2.565-4.542-2.565-4.542c0.177-2.114,0.232-4.213,0.229-6.062H0c0,0,0.643,12.061,0,23.553\n            c0,0,11.197,0.771,16.923,0.517l0.426-15.974l-6.092,0.095L11.634,7.88z M14.615,29.131L2.49,29.389v-1.283l12.125-1.025V29.131z\n            M14.615,26.052L2.49,26.309V24.77l12.125-1.025V26.052z M14.615,20.663v2.053L2.49,22.973v-1.283L14.615,20.663z\"\n          />\n        </>\n      );\n    case \"checkmark\":\n      return(\n        <>\n          <path\n            {...props}\n            d=\"M0,17.027c0,0,5.284,6.065,11.059,14.973c0,0,8.807-12.232,20.941-20.942L25.541,0c0,0-8.857,10.588-14.776,21.333\n\t          c0,0-4.894-6.165-8.221-9.101L0,17.027z\"\n          />\n        </>\n      );\n    case \"x\":\n      return(\n        <>\n          <path\n            {...props}\n            d=\"M16.566,15.8c2.692-2.353,5.767-4.821,9.209-7.265L19.631,0c0,0-4.992,3.971-10.194,10.627\n            C5.085,7.202,2.724,4.801,2.724,4.801L0,7.437c1.59,3.168,3.512,6.068,5.562,8.681C3.392,19.555,1.406,23.434,0,27.654l3.072,2.22\n            c0,0,2.523-3.437,7.327-8.288C17.02,28.285,23.384,32,23.384,32l4.862-9.326C23.838,20.415,19.926,18.047,16.566,15.8z\"\n          />\n        </>\n      );\n    default:\n      return <path />;\n  }\n};\n\nconst SVGIcon = ({\n  name = \"\",\n  style = {},\n  fill = \"\",\n  viewBox = \"\",\n  width = \"100%\",\n  className = \"svg-icon\",\n  height = \"100%\"\n}) => (\n    <svg\n      width={width}\n      style={style}\n      height={height}\n      className={className}\n      xmlns=\"http://www.w3.org/2000/svg\"\n      viewBox={viewBox || getViewBox(name)}\n      xmlnsXlink=\"http://www.w3.org/1999/xlink\"\n    >\n      {getPath(name, { fill })}\n    </svg>\n  );\n\nexport default SVGIcon;","import React, { Component } from 'react';\nimport SVGIcon from '../SVGIcon';\n\nexport class Header extends Component {\n\n  constructor(props) {\n    super(props)\n  \n    this.state = {\n      date: new Date(),\n      daysOfWeek: ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'],\n      dayOfWeek: '',\n      dayOfMonth: '',\n      months: ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'],\n      month: '',\n      year: '',\n      time: '',\n      hours: '',\n      minutes: ''\n    }\n  }\n  \n  render() {\n    const {\n      dayOfWeek,\n      dayOfMonth,\n      month,\n      year,\n    } = this.state;\n    return (\n      <header className='app-header'>\n        {/* left set of red lines to imitate the appearance of paper */}\n        <div style={{\n          borderLeft: '0.5px solid #ffaa9f',\n          borderRight: '0.5px solid #ffaa9f',\n          width: '0.2em',\n          height: '100vmax',\n          float: 'left',\n          marginLeft: '4em'\n        }} />\n        {/* add styling to app title so that it appears above paper's 1st line to the left */}\n        <div style={{\n          color: '#666',\n          fontSize: '3em',\n          margin: '0',\n          padding: '0',\n          textIndent: '0.1em',\n          paddingTop: '0.5em',\n          lineHeight: '0.8em',\n          borderBottom: '1px solid lightblue'\n        }}>\n          {'To-Do List Manager '}\n          <SVGIcon\n            name=\"pencil-and-paper\"\n            width={25}\n            fill=\"#444\"\n            style={{\n              marginBottom: '-0.02em'\n            }}\n          />\n          {/* add styling to date so that it appears above paper's 1st line to the right */}\n          <div className='date' style={{\n            float: 'right',\n            fontSize: '.5em',\n            marginRight: '.75em',\n            paddingTop: '1em'\n          }}>\n            <span className='day-of-week'>{dayOfWeek + ', '}</span>\n            <span className='month'>{month + ' '}</span>\n            <span className='day-of-month'>{dayOfMonth + ', '}</span>\n            <span className='year'>{year}</span>\n          </div>\n        </div>\n      </header>\n    )\n  }\n  \n  componentDidMount = () => {\n    const {\n      date,\n      daysOfWeek,\n      months,\n    } = this.state;\n    \n    this.setState({\n      dayOfWeek: daysOfWeek[date.getDay()],\n      dayOfMonth: date.getDate(),\n      month: months[date.getMonth()],\n      year: date.getFullYear(),\n      time: date.getTime(),\n      hours: date.getHours(),\n      minutes: date.getMinutes(),\n    })\n  }\n}\n\nexport default Header;\n","import React, { Component } from 'react'; // TO-DO: add createRef API\nimport PropTypes from 'prop-types';\nimport SVGIcon from \"./SVGIcon\";\n\nexport class ListItem extends Component {\n  \n  constructor(props) {\n    super(props)\n  \n    this.state = {\n      itemDescription: '',\n      inputModeEnabled: false,\n    }\n  }\n  \n  crossOutCompletedItems = () => {\n    const { item } = this.props;\n    return item.isComplete ? scribbleOutItem : unscribbleOutItem;\n  }\n\n  toggleInputMode = () => {\n    this.setState(prevState => ({\n      inputModeEnabled: !prevState.inputModeEnabled\n    }));\n  }\n\n  updateItemDescription = event => {\n    const { editItem } = this.props;\n    const { id } = this.props.item;\n    const { value } = this.refs.itemDescription; \n\n    // TO-DO: update string refs to use either callback refs or createRef API\n\n    this.setState({\n      itemDescription: value\n    });\n    \n    this.toggleInputMode();\n    \n    let updatedItem = {\n      id: id,\n      description: value,\n      isComplete: false\n    }\n\n    // only seems to pass first arg but this method call is somehow allowed\n    // this is preventing state update in Lists component\n    // editItem(id, value, event);\n\n    // bundled the args into an object (hackish way to pass everything together)\n    editItem(updatedItem, event);\n  }\n\n  handleKeyPress = event => {\n    if (event.key === 'Enter') {\n      this.updateItemDescription();\n    }\n    if (event.key === 'Escape') {\n      this.toggleInputMode();\n    }\n  }\n\n  // render view (to edit item description) when input mode is enabled\n  renderItemDescriptionInputMode = () => {\n    const { itemDescription } = this.state;\n\n    // TO-DO: update string refs to use either callback refs or createRef API\n\n    return (\n      <label style={{\n        display: 'flex',\n        paddingTop: '0.6em',\n        paddingLeft: '0.38em',\n        paddingBottom: '0.07em'\n      }}>\n      \n        {/* input field to update item description */}\n        <input\n          type=\"text\"\n          defaultValue={itemDescription}\n          ref=\"itemDescription\"\n          autoFocus={true}\n          style={{\n            flex: '1',\n            border: '1px solid transparent',\n            outline: 'none',\n            background: 'transparent',\n            fontFamily: \"'Indie Flower', cursive\",\n            fontSize: '1em',\n            marginTop: '-1.4em',\n            marginBottom: '-0.8em',\n            marginLeft: '-0.04em',\n            marginRight: '-0.1em'\n          }}\n          onKeyPress={this.handleKeyPress}\n        />\n\n        {/* submit icon to confirm update */}\n        <button\n          style={{\n            // visibility: 'hidden',\n            background: 'transparent',\n            border: '1px solid transparent',\n            outline: 'none',\n            cursor: 'pointer',\n            marginTop: '-2.3em',\n            marginRight: '0.5em'\n          }}\n          onClick={this.updateItemDescription}\n        >\n          <SVGIcon name=\"checkmark\" width={21} fill=\"#333\" />\n        </button>\n\n        {/* cancel icon to end input mode */}\n        <button\n          style={{\n            // visibility: 'hidden',\n            background: 'transparent',\n            border: '1px solid transparent',\n            outline: 'none',\n            cursor: 'pointer',\n            marginTop: '-2.4em',\n            marginRight: '4em'\n          }}\n          onClick={this.toggleInputMode}\n        >\n          <SVGIcon name=\"x\" width={20} fill=\"#333\" />\n        </button>\n      </label>\n    );\n  }\n  \n  // render default view whenever input mode isn't enabled\n  renderItemDescription = () => (\n    <span onClick={this.toggleInputMode}>\n      {' ' + this.state.itemDescription}\n    </span>\n  );\n\n  render() {\n    const { inputModeEnabled } = this.state;\n    const {\n      toggleItemCompletion,\n      deleteItem\n    } = this.props;\n    const { id } = this.props.item;\n    return (\n      <div className='list-item'>\n        {/* cross out completed items */}\n        <li\n          className='item-description'\n          style={this.crossOutCompletedItems()}\n        >\n          {/* load checkbox to mark items complete / incomplete */}\n          {inputModeEnabled ? (  \n            <input\n              type='checkbox'\n              style={{\n                marginTop: '-.25em',\n                marginLeft: '.5em',\n                float: 'left'\n              }}\n              disabled={true}\n            />\n          ) : (\n            <input\n              type='checkbox'\n                style={{\n                  marginTop: '-.25em',\n                  marginLeft: '.5em',\n                  float: 'left'\n                }}\n              onChange={event => toggleItemCompletion(id, event)}\n            />\n          )}\n          {/* toggle between editing and non-editing mode views */}\n          {inputModeEnabled ?\n            this.renderItemDescriptionInputMode() :\n            this.renderItemDescription()\n          }\n          {/* load clickable SVG icon to delete item */}\n          {inputModeEnabled ? (\n            <button\n              style={{\n                // visibility: 'hidden',\n                background: 'transparent',\n                border: '1px solid transparent',\n                outline: 'none',\n                cursor: 'pointer',\n                marginTop: '-2.6em',\n                marginRight: '1.44em',\n                float: 'right'\n              }}\n              onClick={event => deleteItem(id, event)}\n            >\n              <SVGIcon name=\"trash\" width={25} fill=\"#333\" />\n            </button>\n          ) : (\n            <button\n              style={{\n                // visibility: 'hidden',\n                background: 'transparent',\n                border: '1px solid transparent',\n                outline: 'none',\n                cursor: 'pointer',\n                marginTop: '-1.6em',\n                marginRight: '1.5em',\n                float: 'right'\n              }}\n              onClick={event => deleteItem(id, event)}\n            >\n              <SVGIcon name=\"trash\" width={25} fill=\"#333\" />\n            </button>\n          )}\n          {/* load clickable SVG icon to toggle editing mode views */}\n          {inputModeEnabled ? (<></>) : (\n            <button\n              style={{\n                // visibility: 'hidden',\n                background: 'transparent',\n                border: '1px solid transparent',\n                outline: 'none',\n                cursor: 'pointer',\n                marginTop: '-1.35em',\n                marginRight: '0.1em',\n                float: 'right'\n              }}\n              onClick={this.toggleInputMode}\n            >\n              <SVGIcon name=\"pencil\" width={20} fill=\"#333\" />\n            </button>\n          )}\n        </li>\n      </div>\n    );\n  }\n\n  componentDidMount = () => {\n    let { description } = this.props.item;\n\n    description = (\n      description === '' ?\n        'This to-do item is blank... click to update.' :\n        description\n    ).trim();\n    \n    this.setState({\n      itemDescription: description,\n    });\n  }\n}\n\n// PropTypes\nListItem.propTypes = {\n  item: PropTypes.object.isRequired\n}\n\nconst scribbleOutItem = {\n  borderBottom: '1px solid lightblue',\n  color: '#222',\n  fontSize: '1em',\n  textIndent: '0.4em',\n  paddingTop: '1.2em',\n  lineHeight: '0.7em',\n  textDecoration: 'line-through',\n  textDecorationStyle: 'wavy',\n  textDecorationColor: 'orangered',\n  WebkitTextDecorationColor: 'orangered',\n  transition: 'all 0.25s linear'\n}\n\nconst unscribbleOutItem = {\n  borderBottom: '1px solid lightblue',\n  color: '#222',\n  fontSize: '1em',\n  textIndent: '0.4em',\n  paddingTop: '1.2em',\n  lineHeight: '0.7em',\n  textDecoration: 'line-through',\n  textDecorationStyle: 'wavy',\n  textDecorationColor: 'transparent',\n  WebkitTextDecorationColor: 'transparent',\n  transition: 'all 0.25s linear'\n}\n\nexport default ListItem;","import React, { Component } from 'react';\nimport SVGIcon from \"./SVGIcon\";\n\nexport class AddItem extends Component {\n\n  constructor(props) {\n    super(props)\n  \n    this.state = {\n      description: ''\n    }\n  }\n  \n  onChange = event => {\n    this.setState({\n      [event.target.name]: event.target.value\n    });\n  }\n\n  onSubmit = event => {\n    event.preventDefault();\n    const { addItem } = this.props;\n    const { description } = this.state;\n    addItem(description, event);\n    this.setState({\n      description: ''\n    });\n  }\n\n  render() {\n    const { description } = this.state;\n    const { label } = this.props.list;\n    const placeholder = 'Add a to-do item to the ' + label + ' list.';\n    return (\n      <div\n        style={insertNewItemStyle}\n      >\n        <form\n          onSubmit={this.onSubmit}\n          style={insertNewItemFormStyle} \n          className='insert-new-item'\n        >\n          <input\n            type='text'\n            style={insertNewItemInputStyle}\n            name='description'\n            placeholder={placeholder}\n            value={description}\n            onChange={this.onChange}\n          />\n          <label>\n            <input type='submit' value='+' />\n            <SVGIcon\n              name=\"add\"\n              width={25}\n              fill=\"#333\"\n              style={insertButtonStyle}\n            />\n          </label>\n        </form>\n      </div>\n    )\n  }\n}\n\nconst insertNewItemStyle = {\n  paddingTop: '.75em',\n  paddingBottom: '0.1em'\n}\n\nconst insertNewItemFormStyle = {\n  display: 'flex',\n  marginBottom: '-0.5em'\n}\n\nconst insertNewItemInputStyle = {\n  flex: '1',\n  background: 'transparent',\n  fontFamily: \"'Indie Flower', cursive\",\n  fontSize: '1em',\n  paddingLeft: '0.5em',\n  outline: 'none',\n  border: '1px solid transparent'\n}\n\nconst insertButtonStyle = {\n  background: 'transparent',\n  border: '1px solid transparent',\n  outline: 'none',\n  cursor: 'pointer',\n  marginTop: '-0.6em',\n  marginRight: '1.05em',\n  marginLeft: '0.5em',\n  float: 'right'\n}\n\nexport default AddItem;","import React, { Component } from 'react'; // TO-DO: add createRef API\nimport PropTypes from 'prop-types';\nimport ListItem from './ListItem';\nimport AddItem from './AddItem';\nimport SVGIcon from './SVGIcon';\n\nexport class List extends Component {\n\n  constructor(props) {\n    super(props)\n  \n    this.state = {\n      listLabel: '',\n      inputModeEnabled: false\n    }\n  }\n  \n  toggleInputMode = () => {\n    this.setState(prevState => ({\n      inputModeEnabled: !prevState.inputModeEnabled\n    }));\n  }\n\n  updateListLabel = event => {\n    const { editList } = this.props;\n    const { id } = this.props.list;\n    const { value } = this.refs.listLabel;\n\n    this.setState({\n      listLabel: value\n    });\n    \n    this.toggleInputMode();\n    \n    editList(id, value, event);\n  }\n\n  handleKeyPress = event => {\n    if (event.key === 'Enter') {\n      this.updateListLabel(event);\n    }\n    if (event.key === 'Escape') {\n      this.toggleInputMode();\n    }\n  }\n\n  // render view (to edit list label) when input mode is enabled\n  renderListLabelInputMode = () => {\n    const { listLabel } = this.state;\n    return (\n      <label style={{\n        display: 'flex'\n      }}>\n        {/* input field to update list label */}\n        <input\n          type=\"text\"\n          defaultValue={listLabel}\n          ref=\"listLabel\"\n          autoFocus={true}\n          style={{\n            flex: '1',\n            border: '1px solid transparent',\n            outline: 'none',\n            background: 'transparent',\n            fontFamily: \"'Indie Flower', cursive\",\n            fontSize: '1em',\n            paddingLeft: '0.2em',\n            paddingBottom: '0.1em',\n            marginTop: '-1em',\n            marginBottom: '-1.1em',\n            marginLeft: '-0.04em'\n          }}\n          onKeyPress={event => this.handleKeyPress(event)}\n        />\n        {/* submit icon */}\n        <button\n          style={{\n            background: 'transparent',\n            border: '1px solid transparent',\n            outline: 'none',\n            cursor: 'pointer',\n            marginTop: '-1em',\n            marginRight: '0.4em'\n          }}\n          onClick={event => this.updateListLabel(event)}\n        >\n          <SVGIcon name=\"checkmark\" width={20} fill=\"#333\" />\n        </button>\n        {/* cancel icon */}\n        <button\n          style={{\n            background: 'transparent',\n            border: '1px solid transparent',\n            outline: 'none',\n            cursor: 'pointer',\n            marginTop: '-1em',\n            marginRight: '4.1em',\n            float: 'right'\n          }}\n          onClick={this.toggleInputMode}\n        >\n          <SVGIcon name=\"x\" width={20} fill=\"#333\" />\n        </button>\n      </label>\n    );\n  }\n\n  // render default view whenever input mode isn't enabled\n  renderListLabel = () => (\n    <span onClick={this.toggleInputMode}>\n      {this.state.listLabel}\n    </span>\n  );\n\n  render() {\n    const {\n      list,\n      toggleItemCompletion,\n      addItem,\n      deleteItem,\n      editItem,\n      deleteList,\n    } = this.props;\n    const { inputModeEnabled } = this.state;\n    const { id, items } = this.props.list;\n    return (\n      <div className='list' style={{\n        margin: '0',\n        padding: '0',\n        lineHeight: '2em'\n      }}>\n        <ul style={{\n          border: '1px solid transparent',\n          listStyle: 'none',\n          margin: '0',\n          padding: '0',\n          borderBottom: '1px solid lightblue'\n        }}>\n          <li className='list-label' style={{\n            borderBottom: '1px solid lightblue',\n            color: '#444',\n            fontSize: '1.5em',\n            textIndent: '0.2em',\n            paddingTop: '0.6em',\n            lineHeight: '0.7em'\n          }}>\n            {inputModeEnabled ? \n              this.renderListLabelInputMode() :\n              this.renderListLabel()\n            }\n            {/* delete icon to remove list and its items */}\n            {inputModeEnabled ? (\n              <button\n                style={{\n                  background: 'transparent',\n                  border: '1px solid transparent',\n                  outline: 'none',\n                  cursor: 'pointer',\n                  marginTop: '-2.6em',\n                  marginRight: '1.5em',\n                  float: 'right'\n                }}\n                onClick={event => deleteList(id, event)}\n              >\n                <SVGIcon name=\"trash\" width={25} fill=\"#333\" />\n              </button>\n            ) : (\n              <button\n                  style={{\n                    background: 'transparent',\n                    border: '1px solid transparent',\n                    outline: 'none',\n                    cursor: 'pointer',\n                    marginTop: '-1.2em',\n                    marginRight: '1.5em',\n                    float: 'right'\n                  }}\n                onClick={event => deleteList(id, event)}\n              >\n                <SVGIcon name=\"trash\" width={25} fill=\"#333\" />\n              </button>\n            )}\n            {/* edit icon to enter input mode for updating list label */}\n            {inputModeEnabled ? (<></>) : (\n              <button\n                style={{\n                  background: 'transparent',\n                  border: '1px solid transparent',\n                  outline: 'none',\n                  cursor: 'pointer',\n                  marginTop: '-1em',\n                  marginRight: '0em',\n                  float: 'right'\n                }}\n                onClick={this.toggleInputMode}\n              >\n                <SVGIcon name=\"pencil\" width={23} fill=\"#333\" />\n              </button>\n            )}\n          </li>\n          <div className='list-items'>\n            <ul style={{\n              listStyle: 'none'\n            }}>\n              {items.map(item => {\n                return (\n                  <ListItem\n                    key={item.id}\n                    item={item}\n                    toggleItemCompletion={event => toggleItemCompletion(id, event)}\n                    deleteItem={event => deleteItem(id, event)}\n                    editItem={event => editItem(id, event)}\n                  />\n                );\n              })}\n            </ul>\n          </div>\n          <li>\n            <AddItem\n              list={list}\n              addItem={event => addItem(id, event)}\n            />\n          </li>\n        </ul>\n      </div>\n    );\n  }\n\n  componentDidMount = () => {\n    let { label } = this.props.list;\n    label = (\n      label === '' ?\n        'This list label is blank... click to update.' :\n        label\n    ).trim();\n    this.setState({\n      listLabel: label\n    });\n  }\n}\n\n// PropTypes\nList.propTypes = {\n  list: PropTypes.object.isRequired\n}\n\nexport default List;","import React, { Component } from 'react';\nimport SVGIcon from \"./SVGIcon\";\n\nexport class AddList extends Component {\n\n  constructor(props) {\n    super(props)\n  \n    this.state = {\n      label: ''\n    }\n  }\n  \n  onChange = event => {\n    this.setState({\n      [event.target.name]: event.target.value\n    });\n  }\n\n  onSubmit = event => {\n    event.preventDefault();\n    const { addList } = this.props;\n    const { label } = this.state;\n    addList(label);\n    this.setState({\n      label: ''\n    });\n  }\n\n  render() {\n    const { label } = this.state;\n    const placeholder = 'Click here to enter a new to-do list category.';\n    return (\n      <div\n        style={insertNewListStyle}\n        className='insert-new-list'\n      >\n        <form\n          onSubmit={this.onSubmit}\n          style={insertNewListFormStyle}\n        >\n          <input\n            type='text'\n            style={insertNewListInputStyle}\n            name='label'\n            placeholder={placeholder}\n            value={label}\n            onChange={this.onChange}\n          />\n          <label>\n            <input\n              type='submit'\n              value='+'\n            />\n            <SVGIcon\n              name=\"add\"\n              width={25}\n              fill=\"#333\"\n              style={insertButtonStyle}\n            />\n          </label>\n        </form>\n      </div>\n    );\n  }\n}\n\nconst insertNewListStyle = {\n  paddingTop: '.75em',\n  paddingBottom: '0.1em',\n  borderBottom: '1px solid lightblue'\n}\n\nconst insertNewListFormStyle = {\n  display: 'flex',\n  marginBottom: '-0.5em'\n}\n\nconst insertNewListInputStyle = {\n  flex: '1',\n  background: 'transparent',\n  fontFamily: \"'Indie Flower', cursive\",\n  fontSize: '1em',\n  paddingLeft: '0.5em',\n  outline: 'none',\n  border: 'none'\n}\n\nconst insertButtonStyle = {\n  // visibility: 'hidden',\n  background: 'transparent',\n  border: '1px solid transparent',\n  outline: 'none',\n  cursor: 'pointer',\n  marginTop: '-1em',\n  marginRight: '1.1em',\n  marginLeft: '0.5em'\n}\n\nexport default AddList;","import uuid from 'uuid';\n\nexport const seed = [{\n  id: uuid.v4(),\n  label: 'Personal',\n  items: [{\n    id: uuid.v4(),\n    description: 'Do laundry and fold clothes.',\n    isComplete: false\n  }, {\n    id: uuid.v4(),\n    description: 'Shovel snow off driveway and pour salt.',\n    isComplete: false\n  }, {\n    id: uuid.v4(),\n    description: 'Take car to get oil change and smog check.',\n    isComplete: false\n  }, {\n    id: uuid.v4(),\n    description: 'Prep lunch meals for week.',\n    isComplete: false\n  }]\n}, {\n  id: uuid.v4(),\n  label: 'Family',\n  items: [{\n    id: uuid.v4(),\n    description: \"Send flowers to wife for Valentine's Day.\",\n    isComplete: false\n  }, {\n    id: uuid.v4(),\n    description: \"Make appointment with son's teacher.\",\n    isComplete: false\n  }]\n}, {\n  id: uuid.v4(),\n  label: 'Work',\n  items: [{\n    id: uuid.v4(),\n    description: 'Respond to new emails.',\n    isComplete: false\n  }, {\n    id: uuid.v4(),\n    description: 'Follow up on existing tickets.',\n    isComplete: false\n  }, {\n    id: uuid.v4(),\n    description: 'Setup 1-on-1 meeting with manager.',\n    isComplete: false\n  }]\n}];\n\nexport default { seed };","import React, { Component } from 'react';\nimport uuid from 'uuid';\nimport List from './List';\nimport AddList from './AddList';\nimport { seed } from './SeedLists';\n\nexport class Lists extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      lists: []\n    };\n  }\n\n  toggleItemCompletion = (listId, itemId) => {\n    this.setState(prevState => ({\n      lists: prevState.lists.map(list => {\n        if (list.id === listId) {\n          list.items.map(item => {\n            if (item.id === itemId) {\n              item.isComplete = !item.isComplete;\n            }\n            return item;\n          });\n        }\n        return list;\n      })\n    }));\n  }\n\n  deleteList = listId => {\n    this.setState(prevState => ({\n      lists: [...prevState.lists.filter(list => (list.id !== listId))]\n    }));\n  }\n\n  addList = listLabel => {\n    const newList = {\n      id: uuid.v4(),\n      label: listLabel,\n      items: []\n    }\n    this.setState(prevState => ({\n      lists: [...prevState.lists, newList]\n    }));\n  }\n\n  editList = (listId, listLabel) => {\n    this.setState(prevState => ({\n      lists: prevState.lists.map(list => {\n        if (list.id === listId) {\n          list.label = listLabel;\n        }\n        return list;\n      })\n    }));\n  }\n\n  deleteItem = (listId, itemId) => {\n    this.setState(prevState => ({\n      lists: prevState.lists.map(list => {\n        if (list.id === listId) {\n          list.items = [...list.items.filter(item => item.id !== itemId)];\n        }\n        return list;\n      })\n    }));\n  }\n\n  addItem = (listId, itemDescription) => {\n    this.setState(prevState => ({\n      lists: prevState.lists.map(list => {\n        if (list.id === listId) {\n          const newItem = {\n            id: uuid.v4(),\n            description: itemDescription,\n            isComplete: false\n          }\n          list.items = [...list.items, newItem];\n        }\n        return list;\n      })\n    }));\n  }\n\n  editItem = (listId, updatedItem) => {\n    this.setState(prevState => ({\n      lists: prevState.lists.map(list => {\n        if(list.id === listId) {\n          list.items.forEach(item => {\n            if(item.id === updatedItem.id) {\n              item.description = updatedItem.description;\n            }\n          });\n        }\n        return list;\n      })\n    }))\n  }\n\n  render() {\n    const { lists } = this.state;\n    return (\n      <div>\n        <AddList addList={this.addList} />\n        <div className='lists'>\n          {lists.map(list => {\n            return (\n              <List\n                key={list.id}\n                list={list}\n                toggleItemCompletion={this.toggleItemCompletion}\n                deleteItem={this.deleteItem}\n                addItem={this.addItem}\n                editItem={this.editItem}\n                deleteList={this.deleteList}\n                editList={this.editList}\n              />\n            );\n          })}\n        </div>\n      </div>\n    )\n  }\n\n  componentDidMount = () => {\n    const localStorageLists = localStorage.getItem('lists');\n    // if local storage doesn't contain data, seed lists with sample data\n    if (!localStorageLists) {\n      this.setState({ lists: seed });\n    } else {\n      // TO-DO\n    }\n  }\n}\n\nexport default Lists;","import React, { Component } from 'react';\nimport Header from './layout/Header';\nimport Lists from './Lists';\nimport './App.css';\n\nclass App extends Component {\n  render() {\n    return (\n      <div className='app'>\n        <Header />\n        <Lists />\n      </div>\n    );\n  }\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\n\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}