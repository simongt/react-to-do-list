{"version":3,"sources":["components/layout/Header.js","components/SVGIcon.js","components/ListItem.js","components/AddItem.js","components/List.js","components/AddList.js","components/Lists.js","components/App.js","index.js"],"names":["Header","_Component","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","apply","arguments","inherits","createClass","key","value","date","Date","dayOfWeek","getDay","dayOfMonth","getDate","month","getMonth","year","getFullYear","react_default","a","createElement","className","style","verticalRedLines","appTitleStyle","dateStyle","Component","borderLeft","borderRight","width","height","float","marginLeft","color","fontSize","margin","padding","textIndent","paddingTop","lineHeight","borderBottom","marginRight","getViewBox","name","SVGIcon","_ref","_ref$name","_ref$style","_ref$fill","fill","_ref$viewBox","viewBox","_ref$width","_ref$className","_ref$height","xmlns","xmlnsXlink","props","Fragment","assign","d","getPath","ListItem","_getPrototypeOf2","_this","_len","length","args","Array","_key","call","concat","state","itemDescription","item","description","inputModeEnabled","crossOutCompletedItems","isComplete","scribbleOutItem","unscribbleOutItem","toggleInputMode","setState","prevState","updateItemDescription","event","refs","editItem","id","handleKeyPress","renderItemDescriptionInputMode","disabled","type","checkboxStyle","onChange","toggleItemCompletion","AutosizeInput_default","defaultValue","autoFocus","inputStyle","editItemDescriptionInputStyle","onKeyPress","onClick","updateListLabel","submitAndCancelButtonStyle","components_SVGIcon","renderItemDescription","_this$state","_this$props","deleteItem","_this$props$item","deleteButtonStyle","editButtonStyle","textDecoration","textDecorationStyle","textDecorationColor","transition","marginTop","background","border","outline","cursor","marginBottom","fontFamily","visibility","AddItem","defineProperty","target","onSubmit","preventDefault","addItem","placeholder","list","label","insertNewItemStyle","insertNewItemFormStyle","insertNewItemInputStyle","insertButtonStyle","paddingBottom","display","flex","paddingLeft","List","listLabel","editList","renderListLabelInputMode","ref","editListLabelInputStyle","renderListLabel","deleteList","_this$props$list","items","map","components_ListItem","components_AddItem","AddList","addList","insertNewListStyle","insertNewListFormStyle","insertNewListInputStyle","Lists","lists","uuid","v4","listId","itemId","newList","toConsumableArray","filter","console","log","newItem","push","_this2","components_AddList","components_List","App","layout_Header","components_Lists","ReactDOM","render","src_components_App","document","getElementById"],"mappings":"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","file":"static/js/main.64f20031.chunk.js","sourcesContent":["import React, { Component } from 'react';\n\nexport class Header extends Component {\n  render() {\n    let date = new Date();\n    let daysOfWeek = ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'];\n    let dayOfWeek = daysOfWeek[date.getDay()];\n    let dayOfMonth = date.getDate();\n    let months = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'];\n    let month = months[date.getMonth()];\n    let year = date.getFullYear();\n    // let time = date.getTime();\n    // let hours = date.getHours();\n    // let minutes = date.getMinutes();\n\n    return (\n      <header className='app-header'>\n        <div style={verticalRedLines} />\n        <div style={appTitleStyle}>\n          To-Do List Manager\n          <div style={dateStyle}>\n            <span className='day-of-week'>{dayOfWeek + ', '}</span>\n            <span className='month'>{month + ' '}</span>\n            <span className='day-of-month'>{dayOfMonth + ', '}</span>\n            <span className='year'>{year}</span>\n          </div>\n        </div>\n      </header>\n    )\n  }\n}\n\n// left set of red lines to imitate the appearance of paper\nconst verticalRedLines = {\n  borderLeft: '0.5px solid #ffaa9f',\n  borderRight: '0.5px solid #ffaa9f',\n  width: '0.2em',\n  height: '100vh',\n  float: 'left',\n  marginLeft: '4em'\n}\n\n// add styling to app title so that it appears above paper's 1st line to the left\nconst appTitleStyle = {\n  color: '#666',\n  fontSize: '3em',\n  margin: '0',\n  padding: '0',\n  textIndent: '0.1em',\n  paddingTop: '0.8em',\n  lineHeight: '0.8em',\n  borderBottom: '1px solid lightblue'\n}\n\n// add styling to date so that it appears above paper's 1st line to the right\nconst dateStyle = {\n  float: 'right',\n  fontSize: '.5em',\n  marginRight: '.75em',\n  paddingTop: '.4em'\n}\n\nexport default Header;\n","import React from \"react\";\n\nconst getViewBox = name => {\n  switch (name) {\n    case \"trash\":\n      return \"-3.377 0 32 32\";\n    case \"add\":\n      return \"0 0 31.714 32\";\n    case \"pencil\":\n      return \"0 0 31.311 31.92\";\n    case \"checkmark\":\n      return \"0 0 32 32\";\n    case \"x\":\n      return \"0 0 28.246 32\";\n    default:\n      return \"0 0 32 32\";\n  }\n};\n\nconst getPath = (name, props) => {\n  switch (name) {\n    case \"trash\":\n      return (\n        <>\n          <path\n            {...props}\n            d=\"M24.752,3.076C24.296,2.43,20.25,2.283,15.58,2.424c0.092-0.661,0.243-2.061-0.051-2.333\n            c-0.389-0.36-5.514,0.436-5.812,0.908C9.52,1.317,9.589,2.192,9.655,2.733c-4.782,0.351-8.934,0.91-9.284,1.455\n            c-0.834,1.298,0,3.894,0,3.894s6.984-0.495,11.774-0.464c4.789,0.031,12.606,0.464,12.606,0.464S25.863,4.652,24.752,3.076z\"\n          />\n          <path\n            {...props}\n            d=\"M22.744,10.06c-0.495-0.556-19.405-0.494-19.9,0c-0.446,0.446-0.59,16.514,0.021,20.258c0,0,0.037,1.002,0.586,1.471\n            C4,32.255,22.803,31.91,23.201,31.164c0.142-0.264,0.229-0.535,0.291-0.789c0.031-0.062,0.057-0.195,0.076-0.393\n            c0.054-0.361,0.045-0.621,0.045-0.621C23.805,25.257,23.178,10.549,22.744,10.06z M4.92,30.425\n            c-0.066-4.071-0.229-15.387,0.024-15.792c0.31-0.494,2.658-0.371,2.968,0c0.243,0.293,0.449,11.279,0.524,15.871\n            C7.045,30.494,5.846,30.46,4.92,30.425z M11.454,30.496c-0.1-4.01-0.354-15.456,0.036-15.863c0.474-0.494,3.162-0.371,3.636,0\n            c0.367,0.289,0.679,10.938,0.799,15.65C14.023,30.412,13.107,30.475,11.454,30.496z M18.271,30.091\n            c-0.069-4.325-0.217-15.063,0.029-15.458c0.311-0.494,2.657-0.371,2.969,0c0.229,0.276,0.426,10.068,0.51,15.031\n            C20.611,29.837,19.438,29.979,18.271,30.091z\"\n          />\n        </>\n      );\n    case \"add\":\n      return (\n        <>\n          <path\n            {...props}\n            d=\"M31.714,10.039L20.41 11.675 21.024 0 9.866 2.736 10.537 13.104 0 14.629 0.689 22.177 11.107 21.9 11.761 32 19.339 32 19.884 21.668 30.003 21.4 z\"\n          />\n        </>\n      );\n    case \"pencil\":\n      return (\n        <>\n          <path\n            {...props}\n            d=\"M2.209,26.569c0,0-1.078,3.32-2.209,4.479c0,0,0.338,0.357,1.209,0.869c0,0,2.237-2.312,3.438-3.133\n            C4.648,28.787,4.301,26.084,2.209,26.569z\"\n          />\n          <path\n            {...props}\n            d=\"M30.305,4.062C26.391-3.411,19.98,1.715,19.98,1.715c8.543,2.505,7.371,13.036,7.371,13.036\n            C33.951,10.838,30.305,4.062,30.305,4.062z\"\n          />\n          <path\n            {...props}\n            d=\"M14.096,19.202c2.027-2.604,12.12-8.984,12.133-8.992c-0.438-1.187-0.944-2.162-1.488-2.966\n            c-2.797,1.178-13.249,9.877-13.249,9.877c3.717-4.964,12.103-11.259,12.116-11.27c-2.716-2.761-5.761-2.262-5.761-2.262\n            C12.734,8.257,6.18,16.194,3.714,19.244c-0.312,0.356-0.645,0.771-1.001,1.247c0,0,2.854-2.358,3.785-1.207\n            c0.934,1.152,0.657,3.457,0.657,3.457s1.865-2.358,2.964-1.152c1.097,1.206,0.383,2.854,0,3.291c0,0,1.59-1.591,1.92-0.986\n            c0.328,0.604,0.054,1.976-0.935,3.235c0,0,0.183-0.21,0.437-0.537c7.552-9.265,15.812-11.841,15.812-11.841\n            c-0.166-1.094-0.377-2.079-0.621-2.972C22.965,13.326,14.096,19.202,14.096,19.202z\"\n          />\n          <path\n            {...props}\n            d=\"M11.408,24.88c-0.057-0.438-1.289,0-1.289,0c0.19-0.438-0.083-1.617-0.604-2.275c-0.521-0.657-2.359,0.139-2.359,0.139\n            c0-0.551-0.739-1.947-1.562-2.524c-0.821-0.573-2.88,0.274-2.88,0.274c0.356,3.1-0.504,6.076-0.504,6.076\n            c4.367-1.647,2.438,2.22,2.438,2.22c2.881-1.698,6.457-1.658,6.457-1.658C11.929,25.729,11.408,24.88,11.408,24.88z\"\n          />\n        </>\n      );\n    case \"checkmark\":\n      return(\n        <>\n          <path\n            {...props}\n            d=\"M0,17.027c0,0,5.284,6.065,11.059,14.973c0,0,8.807-12.232,20.941-20.942L25.541,0c0,0-8.857,10.588-14.776,21.333\n\t          c0,0-4.894-6.165-8.221-9.101L0,17.027z\"\n          />\n        </>\n      );\n    case \"x\":\n      return(\n        <>\n          <path\n            {...props}\n            d=\"M16.566,15.8c2.692-2.353,5.767-4.821,9.209-7.265L19.631,0c0,0-4.992,3.971-10.194,10.627\n            C5.085,7.202,2.724,4.801,2.724,4.801L0,7.437c1.59,3.168,3.512,6.068,5.562,8.681C3.392,19.555,1.406,23.434,0,27.654l3.072,2.22\n            c0,0,2.523-3.437,7.327-8.288C17.02,28.285,23.384,32,23.384,32l4.862-9.326C23.838,20.415,19.926,18.047,16.566,15.8z\"\n          />\n        </>\n      );\n    default:\n      return <path />;\n  }\n};\n\nconst SVGIcon = ({\n  name = \"\",\n  style = {},\n  fill = \"#000\",\n  viewBox = \"\",\n  width = \"100%\",\n  className = \"\",\n  height = \"100%\"\n}) => (\n    <svg\n      width={width}\n      style={style}\n      height={height}\n      className={className}\n      xmlns=\"http://www.w3.org/2000/svg\"\n      viewBox={viewBox || getViewBox(name)}\n      xmlnsXlink=\"http://www.w3.org/1999/xlink\"\n    >\n      {getPath(name, { fill })}\n    </svg>\n  );\n\nexport default SVGIcon;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport SVGIcon from \"./SVGIcon\";\nimport AutosizeInput from 'react-input-autosize';\n\nexport class ListItem extends Component {\n\n  state = {\n    itemDescription: this.props.item.description,\n    inputModeEnabled: false\n  }\n\n  crossOutCompletedItems = () => {\n    const { item } = this.props;\n    return item.isComplete ? scribbleOutItem : unscribbleOutItem;\n  }\n\n  toggleInputMode = () => {\n    this.setState(prevState => ({\n      inputModeEnabled: !prevState.inputModeEnabled\n    }));\n  }\n\n  updateItemDescription = event => {\n    this.setState({\n      itemDescription: this.refs.itemDescription.value\n    });\n    this.toggleInputMode();\n    this.props.editItem(\n      this.props.item.id,\n      this.refs.itemDescription.value,\n      event\n    );\n  }\n\n  handleKeyPress = event => {\n    if (event.key === 'Enter') {\n      this.updateItemDescription(event);\n    }\n    if (event.key === 'Escape') {\n      this.toggleInputMode();\n    }\n  }\n\n  // render view (to edit item description) when input mode is enabled\n  renderItemDescriptionInputMode = () => (\n    <>\n      <input\n        disabled\n        type='checkbox'\n        style={checkboxStyle}\n        onChange={event => this.props.toggleItemCompletion(this.props.item.id, event)}\n      />\n      <AutosizeInput\n        type=\"text\"\n        defaultValue={this.state.itemDescription}\n        refs=\"itemDescription\"\n        autoFocus={true}\n        inputStyle={editItemDescriptionInputStyle}\n        onKeyPress={event => this.handleKeyPress(event)}\n      />\n      <button\n        onClick={event => this.updateListLabel(event)}\n        style={submitAndCancelButtonStyle}\n      >\n        <SVGIcon name=\"checkmark\" width={20} fill=\"#333\" />\n      </button>\n      <button\n        onClick={this.toggleInputMode}\n        style={submitAndCancelButtonStyle}\n      >\n        <SVGIcon name=\"x\" width={20} fill=\"#333\" />\n      </button>\n    </>\n  );\n  \n  // render default view whenever input mode isn't enabled\n  renderItemDescription = () => (\n    <>\n      <input\n        type='checkbox'\n        style={checkboxStyle}\n        onChange={event => this.props.toggleItemCompletion(this.props.item.id, event)}\n      />\n      <span onClick={this.toggleInputMode}>\n        {' ' + this.state.itemDescription}\n      </span>\n    </>\n  );\n\n  render() {\n    const { itemDescription, inputModeEnabled } = this.state;\n    const {\n      toggleItemCompletion,\n      deleteItem,\n      editItem\n    } = this.props;\n    const { id, description } = this.props.item;\n    return (\n      <div className='list-item'>\n        <li\n          className='item-description'\n          style={this.crossOutCompletedItems()}\n        >\n          {inputModeEnabled ?\n            this.renderItemDescriptionInputMode() :\n            this.renderItemDescription()\n          }\n          <button\n            onClick={event => deleteItem(id, event)}\n            style={deleteButtonStyle}\n          >\n            <SVGIcon name=\"trash\" width={25} fill=\"#333\" />\n          </button>\n          <button\n            onClick={event => editItem(id, event)}\n            style={editButtonStyle}\n          >\n            <SVGIcon name=\"pencil\" width={25} fill=\"#333\" />\n          </button>\n        </li>\n      </div>\n    );\n  }\n}\n\n// PropTypes\nListItem.propTypes = {\n  item: PropTypes.object.isRequired\n}\n\nconst scribbleOutItem = {\n  textDecoration: 'line-through',\n  textDecorationStyle: 'wavy',\n  textDecorationColor: 'orangered',\n  transition: 'all 0.25s linear'\n}\n\nconst unscribbleOutItem = {\n  textDecoration: 'line-through',\n  textDecorationStyle: 'wavy',\n  textDecorationColor: 'transparent',\n  transition: 'all 0.25s linear'\n}\n\nconst checkboxStyle = {\n  marginTop: '-.25em',\n  marginLeft: '.5em',\n  float: 'left'\n}\n\nconst submitAndCancelButtonStyle = {\n  background: 'transparent',\n  border: '1px solid transparent',\n  outline: 'none',\n  cursor: 'pointer',\n  marginTop: '-1em',\n  marginBottom: '-0.8em',\n  marginLeft: '-0.04em'\n}\n\nconst editItemDescriptionInputStyle = {\n  border: '1px solid transparent',\n  outline: 'none',\n  background: 'transparent',\n  fontFamily: \"'Indie Flower', cursive\",\n  fontSize: '1em',\n  marginTop: '-1em',\n  marginBottom: '-0.8em',\n  marginLeft: '-0.04em'\n}\n\nconst editButtonStyle = {\n  visibility: 'hidden',\n  background: 'transparent',\n  border: '1px solid transparent',\n  outline: 'none',\n  cursor: 'pointer',\n  marginTop: '-1.5em',\n  marginRight: '0.5em',\n  float: 'right'\n}\n\nconst deleteButtonStyle = {\n  background: 'transparent',\n  border: '1px solid transparent',\n  outline: 'none',\n  cursor: 'pointer',\n  marginTop: '-1.6em',\n  marginRight: '1.5em',\n  float: 'right'\n}\n\n\nexport default ListItem;\n","import React, { Component } from 'react';\nimport SVGIcon from \"./SVGIcon\";\n\nexport class AddItem extends Component {\n  state = {\n    description: ''\n  }\n\n  onChange = event => {\n    this.setState({\n      [event.target.name]: event.target.value\n    });\n  }\n\n  onSubmit = event => {\n    event.preventDefault();\n    const { addItem } = this.props;\n    const { description } = this.state;\n    addItem(description);\n    this.setState({\n      description: ''\n    });\n  }\n\n  render() {\n    const { description } = this.state;\n    const { label } = this.props.list;\n    const placeholder = 'Add a to-do item to the ' + label + ' list.';\n    return (\n      <div\n        style={insertNewItemStyle}\n      >\n        <form\n          onSubmit={this.onSubmit}\n          style={insertNewItemFormStyle} \n          className='insert-new-item'\n        >\n          <input\n            type='text'\n            style={insertNewItemInputStyle}\n            name='description'\n            placeholder={placeholder}\n            value={description}\n            onChange={this.onChange}\n          />\n          <label>\n            <input\n              type='submit'\n              value='+'\n            />\n            <SVGIcon\n              name=\"add\"\n              width={25}\n              fill=\"#333\"\n              style={insertButtonStyle}\n            />\n          </label>\n        </form>\n      </div>\n    )\n  }\n}\n\nconst insertNewItemStyle = {\n  paddingTop: '.75em',\n  paddingBottom: '0.1em'\n}\n\nconst insertNewItemFormStyle = {\n  display: 'flex',\n  marginBottom: '-0.5em'\n}\n\nconst insertNewItemInputStyle = {\n  flex: '1',\n  background: 'transparent',\n  fontFamily: \"'Indie Flower', cursive\",\n  fontSize: '1em',\n  paddingLeft: '0.5em',\n  outline: 'none',\n  border: '1px solid transparent'\n}\n\nconst insertButtonStyle = {\n  background: 'transparent',\n  border: '1px solid transparent',\n  outline: 'none',\n  cursor: 'pointer',\n  marginTop: '-0.6em',\n  marginRight: '1.05em',\n  marginLeft: '0.5em',\n  float: 'right'\n}\n\nexport default AddItem;\n","import React, { Component } from 'react';\nimport ListItem from './ListItem';\nimport AddItem from './AddItem';\nimport PropTypes from 'prop-types';\nimport SVGIcon from './SVGIcon';\nimport AutosizeInput from 'react-input-autosize';\n\nexport class List extends Component {\n\n  state = {\n    listLabel: this.props.list.label,\n    inputModeEnabled: false\n  }\n\n  toggleInputMode = () => {\n    this.setState(prevState => ({\n      inputModeEnabled: !prevState.inputModeEnabled\n    }));\n  }\n\n  updateListLabel = event => {\n    this.setState({\n      listLabel: this.refs.listLabel.value\n    });\n    this.toggleInputMode();\n    this.props.editList(\n      this.props.list.id,\n      this.refs.listLabel.value,\n      event\n    );\n  }\n\n  handleKeyPress = event => {\n    if (event.key === 'Enter') {\n      this.updateListLabel(event);\n    }\n    if (event.key === 'Escape') {\n      this.toggleInputMode();\n    }\n  }\n\n  // render view (to edit list label) when input mode is enabled\n  renderListLabelInputMode = () => {\n    return (\n      <label>\n        <AutosizeInput\n          type=\"text\"\n          defaultValue={this.state.listLabel}\n          ref=\"listLabel\"\n          autoFocus={true}\n          inputStyle={editListLabelInputStyle}\n          onKeyPress={event => this.handleKeyPress(event)}\n        />\n        <button\n          onClick={event => this.updateListLabel(event)}\n          style={submitAndCancelButtonStyle}\n        >\n          <SVGIcon name=\"checkmark\" width={20} fill=\"#333\" />\n        </button>\n        <button\n          onClick={this.toggleInputMode}\n          style={submitAndCancelButtonStyle}\n        >\n          <SVGIcon name=\"x\" width={20} fill=\"#333\" />\n        </button>\n      </label>\n    );\n  }\n\n  // render default view whenever input mode isn't enabled\n  renderListLabel = () => (\n    <span onClick={this.toggleInputMode}>\n      {this.state.listLabel}\n    </span>\n  );\n\n  render() {\n    const {\n      list,\n      toggleItemCompletion,\n      addItem,\n      deleteItem,\n      editItem,\n      deleteList,\n    } = this.props;\n    const { inputModeEnabled } = this.state;\n    const { id, items } = this.props.list;\n    return (\n      <div className='list'>\n        <ul>\n          <li className='list-label'>\n            {inputModeEnabled ? \n              this.renderListLabelInputMode() :\n              this.renderListLabel()\n            }\n            <button\n              onClick={event => deleteList(id, event)}\n              style={deleteButtonStyle}\n            >\n              <SVGIcon name=\"trash\" width={25} fill=\"#333\" />\n            </button>\n            {inputModeEnabled ? (<></>) :\n              (\n                <button\n                  onClick={this.toggleInputMode}\n                  style={editButtonStyle}\n                >\n                  <SVGIcon name=\"pencil\" width={25} fill=\"#333\" />\n                </button>\n              )\n            }\n          </li>\n          <div className='list-items'>\n            <ul>\n              {items.map(item => {\n                return (\n                  <ListItem\n                    key={item.id}\n                    item={item}\n                    toggleItemCompletion={event => toggleItemCompletion(id, event)}\n                    deleteItem={event => deleteItem(id, event)}\n                    editItem={event => editItem(id, event)}\n                  />\n                );\n              })}\n            </ul>\n          </div>\n          <li>\n            <AddItem\n              list={list}\n              addItem={(event) => addItem(id, event)}\n            />\n          </li>\n        </ul>\n      </div>\n    );\n  }\n}\n\n// PropTypes\nList.propTypes = {\n  list: PropTypes.object.isRequired\n}\n\nconst editListLabelInputStyle = {\n  border: '1px solid transparent',\n  outline: 'none',\n  background: 'transparent',\n  fontFamily: \"'Indie Flower', cursive\",\n  fontSize: '1em',\n  marginTop: '-1em',\n  marginBottom: '-0.8em',\n  marginLeft: '-0.25em'\n}\n\nconst submitAndCancelButtonStyle = {\n  background: 'transparent',\n  border: '1px solid transparent',\n  outline: 'none',\n  cursor: 'pointer',\n  marginTop: '-1em',\n  marginBottom: '-0.8em',\n  marginLeft: '-0.04em'\n}\n\nconst editButtonStyle = {\n  background: 'transparent',\n  border: '1px solid transparent',\n  outline: 'none',\n  cursor: 'pointer',\n  marginTop: '-1.1em',\n  marginRight: '0.5em',\n  float: 'right'\n}\n\nconst deleteButtonStyle = {\n  background: 'transparent',\n  border: '1px solid transparent',\n  outline: 'none',\n  cursor: 'pointer',\n  marginTop: '-1.1em',\n  marginRight: '1.55em',\n  float: 'right'\n}\n\nexport default List;","import React, { Component } from 'react';\nimport SVGIcon from \"./SVGIcon\";\n\nexport class AddList extends Component {\n  state = {\n    label: ''\n  }\n\n  onChange = event => {\n    this.setState({\n      [event.target.name]: event.target.value\n    });\n  }\n\n  onSubmit = event => {\n    event.preventDefault();\n    const { addList } = this.props;\n    const { label } = this.state;\n    addList(label);\n    this.setState({\n      label: ''\n    });\n  }\n\n  render() {\n    const { label } = this.state;\n    const placeholder = 'Click here to enter a new to-do list category.';\n    return (\n      <div\n        style={insertNewListStyle}\n        className='insert-new-list'\n      >\n        <form\n          onSubmit={this.onSubmit}\n          style={insertNewListFormStyle}\n        >\n          <input\n            type='text'\n            style={insertNewListInputStyle}\n            name='label'\n            placeholder={placeholder}\n            value={label}\n            onChange={this.onChange}\n          />\n          <label>\n            <input\n              type='submit'\n              value='+'\n            />\n            <SVGIcon\n              name=\"add\"\n              width={25}\n              fill=\"#333\"\n              style={insertButtonStyle}\n            />\n          </label>\n        </form>\n      </div>\n    );\n  }\n}\n\nconst insertNewListStyle = {\n  paddingTop: '.75em',\n  paddingBottom: '0.1em',\n  borderBottom: '1px solid lightblue'\n}\n\nconst insertNewListFormStyle = {\n  display: 'flex',\n  marginBottom: '-0.5em'\n}\n\nconst insertNewListInputStyle = {\n  flex: '1',\n  background: 'transparent',\n  fontFamily: \"'Indie Flower', cursive\",\n  fontSize: '1em',\n  paddingLeft: '0.5em',\n  outline: 'none',\n  border: 'none'\n}\n\nconst insertButtonStyle = {\n  // visibility: 'hidden',\n  background: 'transparent',\n  border: '1px solid transparent',\n  outline: 'none',\n  cursor: 'pointer',\n  marginTop: '-1em',\n  marginRight: '1.1em',\n  marginLeft: '0.5em'\n}\n\nexport default AddList;\n","import React, { Component } from 'react';\nimport uuid from 'uuid';\n\nimport List from './List';\nimport AddList from './AddList';\n\nexport class Lists extends Component {\n\n  state = {\n    lists: [{\n      id: uuid.v4(),\n      label: 'Personal',\n      items: [{\n        id: uuid.v4(),\n        description: 'Do laundry and fold clothes.',\n        isComplete: false\n      }, {\n        id: uuid.v4(),\n        description: 'Shovel snow off driveway and pour salt.',\n        isComplete: false\n      }, {\n        id: uuid.v4(),\n        description: 'Take car to get oil change and smog check.',\n        isComplete: false\n      }, {\n        id: uuid.v4(),\n        description: 'Prep lunch meals for week.',\n        isComplete: false\n      }]\n    }, {\n      id: uuid.v4(),\n      label: 'Family',\n      items: [{\n        id: uuid.v4(),\n        description: \"Send flowers to wife for Valentine's Day.\",\n        isComplete: false\n      }, {\n        id: uuid.v4(),\n        description: \"Make appointment with son's teacher.\",\n        isComplete: false\n      }]\n    }, {\n      id: uuid.v4(),\n      label: 'Work',\n      items: [{\n        id: uuid.v4(),\n        description: 'Respond to new emails.',\n        isComplete: false\n      }, {\n        id: uuid.v4(),\n        description: 'Follow up on existing tickets.',\n        isComplete: false\n      }, {\n        id: uuid.v4(),\n        description: 'Setup 1-on-1 meeting with manager.',\n        isComplete: false\n      }]\n    }]\n  }\n\n  toggleItemCompletion = (listId, itemId) => {\n    this.setState(prevState => ({\n      lists: prevState.lists.map(list => {\n        if (list.id === listId) {\n          list.items.map(item => {\n            if (item.id === itemId) {\n              item.isComplete = !item.isComplete;\n            }\n            return item;\n          });\n        }\n        return list;\n      })\n    }));\n  }\n\n  addList = listLabel => {\n    const newList = {\n      id: uuid.v4(),\n      label: listLabel,\n      items: []\n    }\n    this.setState(prevState => ({\n      lists: [...prevState.lists, newList]\n    }));\n  }\n\n  deleteItem = (listId, itemId) => {\n    this.setState(prevState => ({\n      lists: prevState.lists.map(list => {\n        if (list.id === listId) {\n          list.items = [...list.items.filter(item => item.id !== itemId)];\n        }\n        return list;\n      })\n    }));\n  }\n\n  editItem = (listId, itemId) => {\n    this.setState(prevState => ({\n      lists: prevState.lists.map(list => {\n        if (list.id === listId) {\n          console.log('edit item: ' + list.items[itemId].description)\n        }\n        return list;\n      })\n    }));\n  }\n\n  addItem = (listId, itemDescription) => {\n    this.setState(prevState => ({\n      lists: prevState.lists.map(list => {\n        if (list.id === listId) {\n          const newItem = {\n            id: uuid.v4(),\n            description: itemDescription,\n            isComplete: false\n          }\n          list.items.push(newItem);\n        }\n        return list;\n      })\n    }));\n  }\n\n  deleteList = listId => {\n    this.setState(prevState => ({\n      lists: [...prevState.lists.filter(list => list.id !== listId)]\n    }));\n  }\n\n  editList = (listId, listLabel) => {\n    this.setState(prevState => ({\n      lists: prevState.lists.map(list => {\n        if (list.id === listId) {\n          list.label = listLabel;\n        }\n        return list;\n      })\n    }));\n  }\n\n  render() {\n    const { lists } = this.state;\n    return (\n      <div>\n        <AddList addList={this.addList} />\n        <div className='lists'>\n          {lists.map(list => {\n            return (\n              <List\n                key={list.id}\n                list={list}\n                toggleItemCompletion={this.toggleItemCompletion}\n                addItem={this.addItem}\n                deleteItem={this.deleteItem}\n                editItem={this.editItem}\n                deleteList={this.deleteList}\n                editList={this.editList}\n              />\n            );\n          })}\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default Lists;\n","import React, { Component } from 'react';\n\nimport Header from './layout/Header';\nimport Lists from './Lists';\nimport './App.css';\n\nclass App extends Component {\n  render() {\n    return (\n      <div className='app'>\n        <Header />\n        <Lists />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\n\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}