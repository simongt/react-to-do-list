{"version":3,"sources":["components/ListItem.js","components/List.js","components/Lists.js","components/App.js","index.js"],"names":["ListItem","_Component","_getPrototypeOf2","_this","Object","classCallCheck","this","_len","arguments","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","concat","crossOutCompletedItems","props","item","isComplete","scribbleOutItem","unscribbleOutItem","inherits","createClass","key","value","toggleItemCompletion","_this$props$item","id","description","itemId","react_default","a","createElement","className","style","type","onChange","bind","Component","textDecoration","textDecorationStyle","textDecorationColor","List","_this$props$list","list","label","items","listId","map","components_ListItem","Lists","_this$props","lists","components_List","App","state","setState","prevState","verticalRedLines","appTitleStyle","components_Lists","borderLeft","borderRight","width","height","float","marginLeft","color","fontSize","margin","padding","textIndent","paddingTop","lineHeight","borderBottom","ReactDOM","render","src_components_App","document","getElementById"],"mappings":"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","file":"static/js/main.908b484f.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nexport class ListItem extends Component {\n  crossOutCompletedItems = () => {\n    const { item } = this.props;\n    return item.isComplete ? scribbleOutItem : unscribbleOutItem;\n  }\n\n  render() {\n    const { toggleItemCompletion } = this.props;\n    const { id, description } = this.props.item;\n    const itemId = id;\n    return (\n      <div className=\"list-item\">\n        <li\n          className=\"item-description\"\n          style={this.crossOutCompletedItems()}\n        >\n          <input\n            type=\"checkbox\"\n            onChange={toggleItemCompletion.bind(this, itemId)}\n          />\n          {' '}\n          {description}\n        </li>\n      </div>\n    );\n  }\n}\n\n// PropTypes\nListItem.propTypes = {\n  item: PropTypes.object.isRequired\n}\n\nconst scribbleOutItem = {\n  textDecoration: 'line-through',\n  textDecorationStyle: 'wavy',\n  textDecorationColor: 'orangered'\n}\n\nconst unscribbleOutItem = {\n  textDecoration: 'none',\n  textDecorationStyle: 'none',\n  textDecorationColor: 'none'\n}\n\nexport default ListItem;\n","import React, { Component } from 'react';\nimport ListItem from './ListItem';\nimport PropTypes from 'prop-types';\n\nexport class List extends Component {\n  render() {\n    const { toggleItemCompletion } = this.props;\n    const { id, label, items } = this.props.list;\n    const listId = id;\n    return (\n      <div className=\"list\">\n        <ul>\n          <li className=\"list-label\">{label}</li>\n          <div className=\"list-items\">\n            <ul>\n              {items.map(item => {\n                return (\n                  <ListItem\n                    key={item.id}\n                    item={item}\n                    toggleItemCompletion={toggleItemCompletion.bind(this, listId)}\n                  />\n                );\n              })}\n            </ul>\n          </div>\n        </ul>\n      </div>\n    );\n  }\n}\n\n// PropTypes\nList.propTypes = {\n  list: PropTypes.object.isRequired\n}\n\nexport default List;","import React, { Component } from 'react';\nimport List from './List';\nimport PropTypes from 'prop-types';\n\nexport class Lists extends Component {\n\n  render() {\n    const { lists, toggleItemCompletion } = this.props;\n    return (\n      <div className=\"lists\">\n        {lists.map(list => {\n          return (\n            <List\n              key={list.id}\n              list={list}\n              toggleItemCompletion={toggleItemCompletion}\n            />\n          );\n        })}\n      </div>\n    )\n  }\n}\n\n// PropTypes\nLists.propTypes = {\n  lists: PropTypes.array.isRequired\n}\n\nexport default Lists;\n","import React, { Component } from \"react\";\nimport Lists from \"./Lists\";\nimport \"./App.css\";\n\nclass App extends Component {\n  state = {\n    lists: [{\n      id: 0,\n      label: \"Personal\",\n      items: [{\n        id: 0,\n        description: \"Do laundry and fold clothes.\",\n        isComplete: false\n      }, {\n        id: 1,\n        description: \"Shovel snow off driveway and pour salt.\",\n        isComplete: false\n      }, {\n        id: 2,\n        description: \"Take car to get oil change and smog check.\",\n        isComplete: false\n      }, {\n        id: 3,\n        description: \"Prep lunch meals for week.\",\n        isComplete: false\n      }]\n    }, {\n      id: 1,\n      label: \"Family\",\n      items: [{\n        id: 0,\n        description: \"Send flowers to wife for Valentine's Day.\",\n        isComplete: false\n      }, {\n        id: 1,\n        description: \"Make appointment with son's teacher.\",\n        isComplete: false\n      }]\n    }, {\n      id: 2,\n      label: \"Work\",\n      items: [{\n        id: 0,\n        description: \"Respond to new emails.\",\n        isComplete: false\n      }, {\n        id: 1,\n        description: \"Follow up on existing tickets.\",\n        isComplete: false\n      }, {\n        id: 2,\n        description: \"Setup 1-on-1 meeting with manager.\",\n        isComplete: false\n      }]\n    }]\n  }\n  \n  toggleItemCompletion = (listId, itemId) => {\n    this.setState(prevState => ({\n      lists: prevState.lists.map(list => {\n        if(list.id === listId) {\n          list.items.map(item => {\n            if(item.id === itemId) {\n              item.isComplete = !item.isComplete;\n            }\n            return item;\n          });\n        }\n        return list;\n      })\n    }));\n  }\n\n  render() {\n    const { lists } = this.state;\n    return (\n      <div className=\"app\">\n        <div style={verticalRedLines} />\n        <p style={appTitleStyle}>To-Do List Manager</p>\n        <Lists\n          lists={lists}\n          toggleItemCompletion={this.toggleItemCompletion}\n        />\n      </div>\n    );\n  }\n}\n\n// left set of red lines to imitate the appearance of paper\nconst verticalRedLines = {\n  borderLeft: `0.5px solid #ffaa9f`,\n  borderRight: `0.5px solid #ffaa9f`,\n  width: `0.2em`,\n  height: `100vh`,\n  float: `left`,\n  marginLeft: `4em`\n}\n\n// add styling to app title so that it appears above paper's 1st line\nconst appTitleStyle = {\n  color: `#666`,\n  fontSize: `3em`,\n  margin: `0`,\n  padding: `0`,\n  textIndent: `0.1em`,\n  paddingTop: `0.8em`,\n  lineHeight: `0.8em`,\n  borderBottom: `1px solid lightblue`\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}