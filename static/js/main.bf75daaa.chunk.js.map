{"version":3,"sources":["components/SVGIcon.js","components/layout/Header.js","components/ListItem.js","components/AddItem.js","components/List.js","components/AddList.js","components/Lists.js","components/App.js","index.js"],"names":["getViewBox","name","SVGIcon","_ref","_ref$name","_ref$style","style","_ref$fill","fill","_ref$viewBox","viewBox","_ref$width","width","_ref$className","className","_ref$height","height","react_default","a","createElement","xmlns","xmlnsXlink","props","Fragment","Object","assign","d","getPath","Header","_Component","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","apply","arguments","inherits","createClass","key","value","date","Date","dayOfWeek","getDay","dayOfMonth","getDate","month","getMonth","year","getFullYear","verticalRedLines","appTitleStyle","components_SVGIcon","marginBottom","dateStyle","Component","borderLeft","borderRight","float","marginLeft","color","fontSize","margin","padding","textIndent","paddingTop","lineHeight","borderBottom","marginRight","ListItem","_getPrototypeOf2","_this","_len","length","args","Array","_key","call","concat","state","itemDescription","item","description","inputModeEnabled","crossOutCompletedItems","isComplete","scribbleOutItem","unscribbleOutItem","toggleInputMode","setState","prevState","updateItemDescription","event","editItem","id","refs","handleKeyPress","renderItemDescriptionInputMode","display","paddingLeft","paddingBottom","type","defaultValue","ref","autoFocus","flex","border","outline","background","fontFamily","marginTop","onKeyPress","cursor","onClick","renderItemDescription","_this$props","toggleItemCompletion","deleteItem","disabled","onChange","textDecoration","textDecorationStyle","textDecorationColor","transition","AddItem","defineProperty","target","onSubmit","preventDefault","addItem","placeholder","list","label","insertNewItemStyle","insertNewItemFormStyle","insertNewItemInputStyle","insertButtonStyle","List","listLabel","updateListLabel","editList","renderListLabelInputMode","renderListLabel","deleteList","_this$props$list","items","listStyle","map","components_ListItem","components_AddItem","AddList","addList","insertNewListStyle","insertNewListFormStyle","insertNewListInputStyle","Lists","lists","uuid","v4","listId","itemId","toConsumableArray","filter","newList","newItem","push","updatedItem","forEach","_this2","components_AddList","components_List","App","layout_Header","components_Lists","ReactDOM","render","src_components_App","document","getElementById"],"mappings":"iOAEMA,EAAa,SAAAC,GACjB,OAAQA,GACN,IAAK,QACH,MAAO,iBACT,IAAK,MACH,MAAO,gBACT,IAAK,SACH,MAAO,mBACT,IAAK,mBACH,MAAO,gBACT,IAAK,YACH,MAAO,YACT,IAAK,IACH,MAAO,gBACT,QACE,MAAO,cAyIEC,EAtBC,SAAAC,GAAA,IAAAC,EAAAD,EACdF,YADc,IAAAG,EACP,GADOA,EAAAC,EAAAF,EAEdG,aAFc,IAAAD,EAEN,GAFMA,EAAAE,EAAAJ,EAGdK,YAHc,IAAAD,EAGP,OAHOA,EAAAE,EAAAN,EAIdO,eAJc,IAAAD,EAIJ,GAJIA,EAAAE,EAAAR,EAKdS,aALc,IAAAD,EAKN,OALMA,EAAAE,EAAAV,EAMdW,iBANc,IAAAD,EAMF,WANEA,EAAAE,EAAAZ,EAOda,cAPc,IAAAD,EAOL,OAPKA,EAAA,OASZE,EAAAC,EAAAC,cAAA,OACEP,MAAOA,EACPN,MAAOA,EACPU,OAAQA,EACRF,UAAWA,EACXM,MAAM,6BACNV,QAASA,GAAWV,EAAWC,GAC/BoB,WAAW,gCA/HD,SAACpB,EAAMqB,GACrB,OAAQrB,GACN,IAAK,QACH,OACEgB,EAAAC,EAAAC,cAAAF,EAAAC,EAAAK,SAAA,KACEN,EAAAC,EAAAC,cAAA,OAAAK,OAAAC,OAAA,GACMH,EADN,CAEEI,EAAE,+TAIJT,EAAAC,EAAAC,cAAA,OAAAK,OAAAC,OAAA,GACMH,EADN,CAEEI,EAAE,gyBAWV,IAAK,MACH,OACET,EAAAC,EAAAC,cAAAF,EAAAC,EAAAK,SAAA,KACEN,EAAAC,EAAAC,cAAA,OAAAK,OAAAC,OAAA,GACMH,EADN,CAEEI,EAAE,uJAIV,IAAK,SACH,OACET,EAAAC,EAAAC,cAAAF,EAAAC,EAAAK,SAAA,KACEN,EAAAC,EAAAC,cAAA,OAAAK,OAAAC,OAAA,GACMH,EADN,CAEEI,EAAE,+IAGJT,EAAAC,EAAAC,cAAA,OAAAK,OAAAC,OAAA,GACMH,EADN,CAEEI,EAAE,wIAGJT,EAAAC,EAAAC,cAAA,OAAAK,OAAAC,OAAA,GACMH,EADN,CAEEI,EAAE,0mBAOJT,EAAAC,EAAAC,cAAA,OAAAK,OAAAC,OAAA,GACMH,EADN,CAEEI,EAAE,+UAMV,IAAK,mBACH,OACET,EAAAC,EAAAC,cAAAF,EAAAC,EAAAK,SAAA,KACEN,EAAAC,EAAAC,cAAA,OAAAK,OAAAC,OAAA,GACMH,EADN,CAEEI,EAAE,+CAEJT,EAAAC,EAAAC,cAAA,OAAAK,OAAAC,OAAA,GACMH,EADN,CAEEI,EAAE,wSAIJT,EAAAC,EAAAC,cAAA,OAAAK,OAAAC,OAAA,GACMH,EADN,CAEEI,EAAE,0bAOV,IAAK,YACH,OACET,EAAAC,EAAAC,cAAAF,EAAAC,EAAAK,SAAA,KACEN,EAAAC,EAAAC,cAAA,OAAAK,OAAAC,OAAA,GACMH,EADN,CAEEI,EAAE,4JAKV,IAAK,IACH,OACET,EAAAC,EAAAC,cAAAF,EAAAC,EAAAK,SAAA,KACEN,EAAAC,EAAAC,cAAA,OAAAK,OAAAC,OAAA,GACMH,EADN,CAEEI,EAAE,+UAMV,QACE,OAAOT,EAAAC,EAAAC,cAAA,cAsBNQ,CAAQ1B,EAAM,CAAEO,WCnJVoB,EAAb,SAAAC,GAAA,SAAAD,IAAA,OAAAJ,OAAAM,EAAA,EAAAN,CAAAO,KAAAH,GAAAJ,OAAAQ,EAAA,EAAAR,CAAAO,KAAAP,OAAAS,EAAA,EAAAT,CAAAI,GAAAM,MAAAH,KAAAI,YAAA,OAAAX,OAAAY,EAAA,EAAAZ,CAAAI,EAAAC,GAAAL,OAAAa,EAAA,EAAAb,CAAAI,EAAA,EAAAU,IAAA,SAAAC,MAAA,WAEI,IAAIC,EAAO,IAAIC,KAEXC,EADa,CAAC,SAAU,SAAU,UAAW,YAAa,WAAY,SAAU,YACzDF,EAAKG,UAC5BC,EAAaJ,EAAKK,UAElBC,EADS,CAAC,UAAW,WAAY,QAAS,QAAS,MAAO,OAAQ,OAAQ,SAAU,YAAa,UAAW,WAAY,YACzGN,EAAKO,YACpBC,EAAOR,EAAKS,cAKhB,OACEhC,EAAAC,EAAAC,cAAA,UAAQL,UAAU,cAChBG,EAAAC,EAAAC,cAAA,OAAKb,MAAO4C,IACZjC,EAAAC,EAAAC,cAAA,OAAKb,MAAO6C,GACT,sBACDlC,EAAAC,EAAAC,cAACiC,EAAD,CACEnD,KAAK,mBACLW,MAAO,GACPJ,KAAK,OACLF,MAAO,CACL+C,aAAc,aAGlBpC,EAAAC,EAAAC,cAAA,OAAKb,MAAOgD,GACVrC,EAAAC,EAAAC,cAAA,QAAML,UAAU,eAAe4B,EAAY,MAC3CzB,EAAAC,EAAAC,cAAA,QAAML,UAAU,SAASgC,EAAQ,KACjC7B,EAAAC,EAAAC,cAAA,QAAML,UAAU,gBAAgB8B,EAAa,MAC7C3B,EAAAC,EAAAC,cAAA,QAAML,UAAU,QAAQkC,UA9BpCpB,EAAA,CAA4B2B,aAuCtBL,EAAmB,CACvBM,WAAY,sBACZC,YAAa,sBACb7C,MAAO,QACPI,OAAQ,UACR0C,MAAO,OACPC,WAAY,OAIRR,EAAgB,CACpBS,MAAO,OACPC,SAAU,MACVC,OAAQ,IACRC,QAAS,IACTC,WAAY,QACZC,WAAY,QACZC,WAAY,QACZC,aAAc,uBAIVb,EAAY,CAChBI,MAAO,QACPG,SAAU,OACVO,YAAa,QACbH,WAAY,OAGCrC,2BCnEFyC,EAAb,SAAAxC,GAAA,SAAAwC,IAAA,IAAAC,EAAAC,EAAA/C,OAAAM,EAAA,EAAAN,CAAAO,KAAAsC,GAAA,QAAAG,EAAArC,UAAAsC,OAAAC,EAAA,IAAAC,MAAAH,GAAAI,EAAA,EAAAA,EAAAJ,EAAAI,IAAAF,EAAAE,GAAAzC,UAAAyC,GAAA,OAAAL,EAAA/C,OAAAQ,EAAA,EAAAR,CAAAO,MAAAuC,EAAA9C,OAAAS,EAAA,EAAAT,CAAA6C,IAAAQ,KAAA3C,MAAAoC,EAAA,CAAAvC,MAAA+C,OAAAJ,MACEK,MAAQ,CACNC,gBAAiBT,EAAKjD,MAAM2D,KAAKC,YACjCC,kBAAkB,GAHtBZ,EAMEa,uBAAyB,WAEvB,OADiBb,EAAKjD,MAAd2D,KACII,WAAaC,EAAkBC,GAR/ChB,EAWEiB,gBAAkB,WAChBjB,EAAKkB,SAAS,SAAAC,GAAS,MAAK,CAC1BP,kBAAmBO,EAAUP,qBAbnCZ,EAiBEoB,sBAAwB,SAAAC,GAAS,IACvBC,EAAatB,EAAKjD,MAAlBuE,SACAC,EAAOvB,EAAKjD,MAAM2D,KAAlBa,GACAvD,EAAUgC,EAAKwB,KAAKf,gBAApBzC,MAIRgC,EAAKkB,SAAS,CACZT,gBAAiBzC,IAGnBgC,EAAKiB,kBAaLK,EAXkB,CAChBC,GAAIA,EACJZ,YAAa3C,EACb8C,YAAY,GAQQO,IAzC1BrB,EA4CEyB,eAAiB,SAAAJ,GACG,UAAdA,EAAMtD,KACRiC,EAAKoB,wBAEW,WAAdC,EAAMtD,KACRiC,EAAKiB,mBAjDXjB,EAsDE0B,+BAAiC,WAAM,IAC7BjB,EAAoBT,EAAKQ,MAAzBC,gBAIR,OACE/D,EAAAC,EAAAC,cAAA,SAAOb,MAAO,CACZ4F,QAAS,OACTjC,WAAY,QACZkC,YAAa,SACbC,cAAe,WAIfnF,EAAAC,EAAAC,cAAA,SACEkF,KAAK,OACLC,aAActB,EACduB,IAAI,kBACJC,WAAW,EACXlG,MAAO,CACLmG,KAAM,IACNC,OAAQ,wBACRC,QAAS,OACTC,WAAY,cACZC,WAAY,0BACZhD,SAAU,MACViD,UAAW,SACXzD,aAAc,SACdM,WAAY,UACZS,YAAa,UAEf2C,WAAYxC,EAAKyB,iBAInB/E,EAAAC,EAAAC,cAAA,UACEb,MAAO,CAELsG,WAAY,cACZF,OAAQ,wBACRC,QAAS,OACTK,OAAQ,UACRF,UAAW,SACX1C,YAAa,SAEf6C,QAAS1C,EAAKoB,uBAEd1E,EAAAC,EAAAC,cAACiC,EAAD,CAASnD,KAAK,YAAYW,MAAO,GAAIJ,KAAK,UAI5CS,EAAAC,EAAAC,cAAA,UACEb,MAAO,CAELsG,WAAY,cACZF,OAAQ,wBACRC,QAAS,OACTK,OAAQ,UACRF,UAAW,SACX1C,YAAa,OAEf6C,QAAS1C,EAAKiB,iBAEdvE,EAAAC,EAAAC,cAACiC,EAAD,CAASnD,KAAK,IAAIW,MAAO,GAAIJ,KAAK,YArH5C+D,EA4HE2C,sBAAwB,kBACtBjG,EAAAC,EAAAC,cAAA,QAAM8F,QAAS1C,EAAKiB,iBACjB,IAAMjB,EAAKQ,MAAMC,kBA9HxBT,EAAA,OAAA/C,OAAAY,EAAA,EAAAZ,CAAA6C,EAAAxC,GAAAL,OAAAa,EAAA,EAAAb,CAAA6C,EAAA,EAAA/B,IAAA,SAAAC,MAAA,WAkIW,IACC4C,EAAqBpD,KAAKgD,MAA1BI,iBADDgC,EAKHpF,KAAKT,MAFP8F,EAHKD,EAGLC,qBACAC,EAJKF,EAILE,WAEMvB,EAAO/D,KAAKT,MAAM2D,KAAlBa,GACR,OACE7E,EAAAC,EAAAC,cAAA,OAAKL,UAAU,aAEbG,EAAAC,EAAAC,cAAA,MACEL,UAAU,mBACVR,MAAOyB,KAAKqD,0BAGXD,EACClE,EAAAC,EAAAC,cAAA,SACEkF,KAAK,WACL/F,MAAO,CACLwG,UAAW,SACXnD,WAAY,OACZD,MAAO,QAET4D,UAAU,IAGZrG,EAAAC,EAAAC,cAAA,SACEkF,KAAK,WACH/F,MAAO,CACLwG,UAAW,SACXnD,WAAY,OACZD,MAAO,QAEX6D,SAAU,SAAA3B,GAAK,OAAIwB,EAAqBtB,EAAIF,MAI/CT,EACCpD,KAAKkE,iCACLlE,KAAKmF,wBAGN/B,EACClE,EAAAC,EAAAC,cAAA,UACEb,MAAO,CAELsG,WAAY,cACZF,OAAQ,wBACRC,QAAS,OACTK,OAAQ,UACRF,UAAW,SACX1C,YAAa,SACbV,MAAO,SAETuD,QAAS,SAAArB,GAAK,OAAIyB,EAAWvB,EAAIF,KAEjC3E,EAAAC,EAAAC,cAACiC,EAAD,CAASnD,KAAK,QAAQW,MAAO,GAAIJ,KAAK,UAGxCS,EAAAC,EAAAC,cAAA,UACEb,MAAO,CAELsG,WAAY,cACZF,OAAQ,wBACRC,QAAS,OACTK,OAAQ,UACRF,UAAW,SACX1C,YAAa,QACbV,MAAO,SAETuD,QAAS,SAAArB,GAAK,OAAIyB,EAAWvB,EAAIF,KAEjC3E,EAAAC,EAAAC,cAACiC,EAAD,CAASnD,KAAK,QAAQW,MAAO,GAAIJ,KAAK,UAIzC2E,EAAoBlE,EAAAC,EAAAC,cAAAF,EAAAC,EAAAK,SAAA,MACnBN,EAAAC,EAAAC,cAAA,UACEb,MAAO,CAELsG,WAAY,cACZF,OAAQ,wBACRC,QAAS,OACTK,OAAQ,UACRF,UAAW,UACX1C,YAAa,QACbV,MAAO,SAETuD,QAASlF,KAAKyD,iBAEdvE,EAAAC,EAAAC,cAACiC,EAAD,CAASnD,KAAK,SAASW,MAAO,GAAIJ,KAAK,gBA5NrD6D,EAAA,CAA8Bd,aA0OxB+B,EAAkB,CACtBnB,aAAc,sBACdP,MAAO,OACPC,SAAU,MACVG,WAAY,QACZC,WAAY,QACZC,WAAY,QACZsD,eAAgB,eAChBC,oBAAqB,OACrBC,oBAAqB,YACrBC,WAAY,oBAGRpC,EAAoB,CACxBpB,aAAc,sBACdP,MAAO,OACPC,SAAU,MACVG,WAAY,QACZC,WAAY,QACZC,WAAY,QACZsD,eAAgB,eAChBC,oBAAqB,OACrBC,oBAAqB,cACrBC,WAAY,oBAGCtD,WCrQFuD,EAAb,SAAA/F,GAAA,SAAA+F,IAAA,IAAAtD,EAAAC,EAAA/C,OAAAM,EAAA,EAAAN,CAAAO,KAAA6F,GAAA,QAAApD,EAAArC,UAAAsC,OAAAC,EAAA,IAAAC,MAAAH,GAAAI,EAAA,EAAAA,EAAAJ,EAAAI,IAAAF,EAAAE,GAAAzC,UAAAyC,GAAA,OAAAL,EAAA/C,OAAAQ,EAAA,EAAAR,CAAAO,MAAAuC,EAAA9C,OAAAS,EAAA,EAAAT,CAAAoG,IAAA/C,KAAA3C,MAAAoC,EAAA,CAAAvC,MAAA+C,OAAAJ,MACEK,MAAQ,CACNG,YAAa,IAFjBX,EAKEgD,SAAW,SAAA3B,GACTrB,EAAKkB,SAALjE,OAAAqG,EAAA,EAAArG,CAAA,GACGoE,EAAMkC,OAAO7H,KAAO2F,EAAMkC,OAAOvF,SAPxCgC,EAWEwD,SAAW,SAAAnC,GACTA,EAAMoC,kBAGNC,EAFoB1D,EAAKjD,MAAjB2G,SACgB1D,EAAKQ,MAArBG,YACaU,GACrBrB,EAAKkB,SAAS,CACZP,YAAa,MAjBnBX,EAAA,OAAA/C,OAAAY,EAAA,EAAAZ,CAAAoG,EAAA/F,GAAAL,OAAAa,EAAA,EAAAb,CAAAoG,EAAA,EAAAtF,IAAA,SAAAC,MAAA,WAqBW,IACC2C,EAAgBnD,KAAKgD,MAArBG,YAEFgD,EAAc,2BADFnG,KAAKT,MAAM6G,KAArBC,MACiD,SACzD,OACEnH,EAAAC,EAAAC,cAAA,OACEb,MAAO+H,GAEPpH,EAAAC,EAAAC,cAAA,QACE4G,SAAUhG,KAAKgG,SACfzH,MAAOgI,EACPxH,UAAU,mBAEVG,EAAAC,EAAAC,cAAA,SACEkF,KAAK,OACL/F,MAAOiI,EACPtI,KAAK,cACLiI,YAAaA,EACb3F,MAAO2C,EACPqC,SAAUxF,KAAKwF,WAEjBtG,EAAAC,EAAAC,cAAA,aACEF,EAAAC,EAAAC,cAAA,SAAOkF,KAAK,SAAS9D,MAAM,MAC3BtB,EAAAC,EAAAC,cAACiC,EAAD,CACEnD,KAAK,MACLW,MAAO,GACPJ,KAAK,OACLF,MAAOkI,WAhDrBZ,EAAA,CAA6BrE,aAyDvB8E,EAAqB,CACzBpE,WAAY,QACZmC,cAAe,SAGXkC,EAAyB,CAC7BpC,QAAS,OACT7C,aAAc,UAGVkF,EAA0B,CAC9B9B,KAAM,IACNG,WAAY,cACZC,WAAY,0BACZhD,SAAU,MACVsC,YAAa,QACbQ,QAAS,OACTD,OAAQ,yBAGJ8B,EAAoB,CACxB5B,WAAY,cACZF,OAAQ,wBACRC,QAAS,OACTK,OAAQ,UACRF,UAAW,SACX1C,YAAa,SACbT,WAAY,QACZD,MAAO,SAGMkE,IC2IAa,EAhOf,SAAA5G,GAAA,SAAA4G,IAAA,IAAAnE,EAAAC,EAAA/C,OAAAM,EAAA,EAAAN,CAAAO,KAAA0G,GAAA,QAAAjE,EAAArC,UAAAsC,OAAAC,EAAA,IAAAC,MAAAH,GAAAI,EAAA,EAAAA,EAAAJ,EAAAI,IAAAF,EAAAE,GAAAzC,UAAAyC,GAAA,OAAAL,EAAA/C,OAAAQ,EAAA,EAAAR,CAAAO,MAAAuC,EAAA9C,OAAAS,EAAA,EAAAT,CAAAiH,IAAA5D,KAAA3C,MAAAoC,EAAA,CAAAvC,MAAA+C,OAAAJ,MAEEK,MAAQ,CACN2D,UAAWnE,EAAKjD,MAAM6G,KAAKC,MAC3BjD,kBAAkB,GAJtBZ,EAOEiB,gBAAkB,WAChBjB,EAAKkB,SAAS,SAAAC,GAAS,MAAK,CAC1BP,kBAAmBO,EAAUP,qBATnCZ,EAaEoE,gBAAkB,SAAA/C,GAAS,IACjBgD,EAAarE,EAAKjD,MAAlBsH,SACA9C,EAAOvB,EAAKjD,MAAM6G,KAAlBrC,GACAvD,EAAUgC,EAAKwB,KAAK2C,UAApBnG,MAERgC,EAAKkB,SAAS,CACZiD,UAAWnG,IAGbgC,EAAKiB,kBAELoD,EAAS9C,EAAIvD,EAAOqD,IAxBxBrB,EA2BEyB,eAAiB,SAAAJ,GACG,UAAdA,EAAMtD,KACRiC,EAAKoE,gBAAgB/C,GAEL,WAAdA,EAAMtD,KACRiC,EAAKiB,mBAhCXjB,EAqCEsE,yBAA2B,WAAM,IACvBH,EAAcnE,EAAKQ,MAAnB2D,UACR,OACEzH,EAAAC,EAAAC,cAAA,SAAOb,MAAO,CACZ4F,QAAS,SAGTjF,EAAAC,EAAAC,cAAA,SACEkF,KAAK,OACLC,aAAcoC,EACdnC,IAAI,YACJC,WAAW,EACXlG,MAAO,CACLmG,KAAM,IACNC,OAAQ,wBACRC,QAAS,OACTC,WAAY,cACZC,WAAY,0BACZhD,SAAU,MACVsC,YAAa,QACbC,cAAe,QACfU,UAAW,OACXzD,aAAc,SACdM,WAAY,WAEdoD,WAAY,SAAAnB,GAAK,OAAIrB,EAAKyB,eAAeJ,MAG3C3E,EAAAC,EAAAC,cAAA,UACEb,MAAO,CACLsG,WAAY,cACZF,OAAQ,wBACRC,QAAS,OACTK,OAAQ,UACRF,UAAW,OACX1C,YAAa,SAEf6C,QAAS,SAAArB,GAAK,OAAIrB,EAAKoE,gBAAgB/C,KAEvC3E,EAAAC,EAAAC,cAACiC,EAAD,CAASnD,KAAK,YAAYW,MAAO,GAAIJ,KAAK,UAG5CS,EAAAC,EAAAC,cAAA,UACEb,MAAO,CACLsG,WAAY,cACZF,OAAQ,wBACRC,QAAS,OACTK,OAAQ,UACRF,UAAW,OACX1C,YAAa,QACbV,MAAO,SAETuD,QAAS1C,EAAKiB,iBAEdvE,EAAAC,EAAAC,cAACiC,EAAD,CAASnD,KAAK,IAAIW,MAAO,GAAIJ,KAAK,YA3F5C+D,EAkGEuE,gBAAkB,kBAChB7H,EAAAC,EAAAC,cAAA,QAAM8F,QAAS1C,EAAKiB,iBACjBjB,EAAKQ,MAAM2D,YApGlBnE,EAAA,OAAA/C,OAAAY,EAAA,EAAAZ,CAAAiH,EAAA5G,GAAAL,OAAAa,EAAA,EAAAb,CAAAiH,EAAA,EAAAnG,IAAA,SAAAC,MAAA,WAwGW,IAAA4E,EAQHpF,KAAKT,MANP6G,EAFKhB,EAELgB,KACAf,EAHKD,EAGLC,qBACAa,EAJKd,EAILc,QACAZ,EALKF,EAKLE,WACAxB,EANKsB,EAMLtB,SACAkD,EAPK5B,EAOL4B,WAEM5D,EAAqBpD,KAAKgD,MAA1BI,iBATD6D,EAUejH,KAAKT,MAAM6G,KAAzBrC,EAVDkD,EAUClD,GAAImD,EAVLD,EAUKC,MACZ,OACEhI,EAAAC,EAAAC,cAAA,OAAKL,UAAU,OAAOR,MAAO,CAC3BwD,OAAQ,IACRC,QAAS,IACTG,WAAY,QAEZjD,EAAAC,EAAAC,cAAA,MAAIb,MAAO,CACToG,OAAQ,wBACRwC,UAAW,OACXpF,OAAQ,IACRC,QAAS,IACTI,aAAc,wBAEdlD,EAAAC,EAAAC,cAAA,MAAIL,UAAU,aAAaR,MAAO,CAChC6D,aAAc,sBACdP,MAAO,OACPC,SAAU,QACVG,WAAY,QACZC,WAAY,QACZC,WAAY,UAEXiB,EACCpD,KAAK8G,2BACL9G,KAAK+G,kBAGN3D,EACClE,EAAAC,EAAAC,cAAA,UACEb,MAAO,CACLsG,WAAY,cACZF,OAAQ,wBACRC,QAAS,OACTK,OAAQ,UACRF,UAAW,SACX1C,YAAa,QACbV,MAAO,SAETuD,QAAS,SAAArB,GAAK,OAAImD,EAAWjD,EAAIF,KAEjC3E,EAAAC,EAAAC,cAACiC,EAAD,CAASnD,KAAK,QAAQW,MAAO,GAAIJ,KAAK,UAGxCS,EAAAC,EAAAC,cAAA,UACIb,MAAO,CACLsG,WAAY,cACZF,OAAQ,wBACRC,QAAS,OACTK,OAAQ,UACRF,UAAW,SACX1C,YAAa,QACbV,MAAO,SAEXuD,QAAS,SAAArB,GAAK,OAAImD,EAAWjD,EAAIF,KAEjC3E,EAAAC,EAAAC,cAACiC,EAAD,CAASnD,KAAK,QAAQW,MAAO,GAAIJ,KAAK,UAIzC2E,EAAoBlE,EAAAC,EAAAC,cAAAF,EAAAC,EAAAK,SAAA,MACnBN,EAAAC,EAAAC,cAAA,UACEb,MAAO,CACLsG,WAAY,cACZF,OAAQ,wBACRC,QAAS,OACTK,OAAQ,UACRF,UAAW,OACX1C,YAAa,MACbV,MAAO,SAETuD,QAASlF,KAAKyD,iBAEdvE,EAAAC,EAAAC,cAACiC,EAAD,CAASnD,KAAK,SAASW,MAAO,GAAIJ,KAAK,WAI7CS,EAAAC,EAAAC,cAAA,OAAKL,UAAU,cACbG,EAAAC,EAAAC,cAAA,MAAIb,MAAO,CACT4I,UAAW,SAEVD,EAAME,IAAI,SAAAlE,GACT,OACEhE,EAAAC,EAAAC,cAACiI,EAAD,CACE9G,IAAK2C,EAAKa,GACVb,KAAMA,EACNmC,qBAAsB,SAAAxB,GAAK,OAAIwB,EAAqBtB,EAAIF,IACxDyB,WAAY,SAAAzB,GAAK,OAAIyB,EAAWvB,EAAIF,IACpCC,SAAU,SAAAD,GAAK,OAAIC,EAASC,EAAIF,UAM1C3E,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAACkI,EAAD,CACElB,KAAMA,EACNF,QAAS,SAAArC,GAAK,OAAIqC,EAAQnC,EAAIF,aAlN5C6C,EAAA,CAA0BlF,aCHb+F,EAAb,SAAAzH,GAAA,SAAAyH,IAAA,IAAAhF,EAAAC,EAAA/C,OAAAM,EAAA,EAAAN,CAAAO,KAAAuH,GAAA,QAAA9E,EAAArC,UAAAsC,OAAAC,EAAA,IAAAC,MAAAH,GAAAI,EAAA,EAAAA,EAAAJ,EAAAI,IAAAF,EAAAE,GAAAzC,UAAAyC,GAAA,OAAAL,EAAA/C,OAAAQ,EAAA,EAAAR,CAAAO,MAAAuC,EAAA9C,OAAAS,EAAA,EAAAT,CAAA8H,IAAAzE,KAAA3C,MAAAoC,EAAA,CAAAvC,MAAA+C,OAAAJ,MACEK,MAAQ,CACNqD,MAAO,IAFX7D,EAKEgD,SAAW,SAAA3B,GACTrB,EAAKkB,SAALjE,OAAAqG,EAAA,EAAArG,CAAA,GACGoE,EAAMkC,OAAO7H,KAAO2F,EAAMkC,OAAOvF,SAPxCgC,EAWEwD,SAAW,SAAAnC,GACTA,EAAMoC,kBAGNuB,EAFoBhF,EAAKjD,MAAjBiI,SACUhF,EAAKQ,MAAfqD,OAER7D,EAAKkB,SAAS,CACZ2C,MAAO,MAjBb7D,EAAA,OAAA/C,OAAAY,EAAA,EAAAZ,CAAA8H,EAAAzH,GAAAL,OAAAa,EAAA,EAAAb,CAAA8H,EAAA,EAAAhH,IAAA,SAAAC,MAAA,WAqBW,IACC6F,EAAUrG,KAAKgD,MAAfqD,MAER,OACEnH,EAAAC,EAAAC,cAAA,OACEb,MAAOkJ,EACP1I,UAAU,mBAEVG,EAAAC,EAAAC,cAAA,QACE4G,SAAUhG,KAAKgG,SACfzH,MAAOmJ,GAEPxI,EAAAC,EAAAC,cAAA,SACEkF,KAAK,OACL/F,MAAOoJ,EACPzJ,KAAK,QACLiI,YAdY,iDAeZ3F,MAAO6F,EACPb,SAAUxF,KAAKwF,WAEjBtG,EAAAC,EAAAC,cAAA,aACEF,EAAAC,EAAAC,cAAA,SACEkF,KAAK,SACL9D,MAAM,MAERtB,EAAAC,EAAAC,cAACiC,EAAD,CACEnD,KAAK,MACLW,MAAO,GACPJ,KAAK,OACLF,MAAOkI,WAlDrBc,EAAA,CAA6B/F,aA2DvBiG,EAAqB,CACzBvF,WAAY,QACZmC,cAAe,QACfjC,aAAc,uBAGVsF,EAAyB,CAC7BvD,QAAS,OACT7C,aAAc,UAGVqG,EAA0B,CAC9BjD,KAAM,IACNG,WAAY,cACZC,WAAY,0BACZhD,SAAU,MACVsC,YAAa,QACbQ,QAAS,OACTD,OAAQ,QAGJ8B,EAAoB,CAExB5B,WAAY,cACZF,OAAQ,wBACRC,QAAS,OACTK,OAAQ,UACRF,UAAW,OACX1C,YAAa,QACbT,WAAY,SAGC2F,IC6EAK,EAtKf,SAAA9H,GAAA,SAAA8H,IAAA,IAAArF,EAAAC,EAAA/C,OAAAM,EAAA,EAAAN,CAAAO,KAAA4H,GAAA,QAAAnF,EAAArC,UAAAsC,OAAAC,EAAA,IAAAC,MAAAH,GAAAI,EAAA,EAAAA,EAAAJ,EAAAI,IAAAF,EAAAE,GAAAzC,UAAAyC,GAAA,OAAAL,EAAA/C,OAAAQ,EAAA,EAAAR,CAAAO,MAAAuC,EAAA9C,OAAAS,EAAA,EAAAT,CAAAmI,IAAA9E,KAAA3C,MAAAoC,EAAA,CAAAvC,MAAA+C,OAAAJ,MAEEK,MAAQ,CACN6E,MAAO,CAAC,CACN9D,GAAI+D,IAAKC,KACT1B,MAAO,WACPa,MAAO,CAAC,CACNnD,GAAI+D,IAAKC,KACT5E,YAAa,+BACbG,YAAY,GACX,CACDS,GAAI+D,IAAKC,KACT5E,YAAa,0CACbG,YAAY,GACX,CACDS,GAAI+D,IAAKC,KACT5E,YAAa,6CACbG,YAAY,GACX,CACDS,GAAI+D,IAAKC,KACT5E,YAAa,6BACbG,YAAY,KAEb,CACDS,GAAI+D,IAAKC,KACT1B,MAAO,SACPa,MAAO,CAAC,CACNnD,GAAI+D,IAAKC,KACT5E,YAAa,4CACbG,YAAY,GACX,CACDS,GAAI+D,IAAKC,KACT5E,YAAa,uCACbG,YAAY,KAEb,CACDS,GAAI+D,IAAKC,KACT1B,MAAO,OACPa,MAAO,CAAC,CACNnD,GAAI+D,IAAKC,KACT5E,YAAa,yBACbG,YAAY,GACX,CACDS,GAAI+D,IAAKC,KACT5E,YAAa,iCACbG,YAAY,GACX,CACDS,GAAI+D,IAAKC,KACT5E,YAAa,qCACbG,YAAY,OAjDpBd,EAsDE6C,qBAAuB,SAAC2C,EAAQC,GAC9BzF,EAAKkB,SAAS,SAAAC,GAAS,MAAK,CAC1BkE,MAAOlE,EAAUkE,MAAMT,IAAI,SAAAhB,GASzB,OARIA,EAAKrC,KAAOiE,GACd5B,EAAKc,MAAME,IAAI,SAAAlE,GAIb,OAHIA,EAAKa,KAAOkE,IACd/E,EAAKI,YAAcJ,EAAKI,YAEnBJ,IAGJkD,QAjEf5D,EAsEEwE,WAAa,SAAAgB,GACXxF,EAAKkB,SAAS,SAAAC,GAAS,MAAK,CAC1BkE,MAAMpI,OAAAyI,EAAA,EAAAzI,CAAKkE,EAAUkE,MAAMM,OAAO,SAAA/B,GAAI,OAAIA,EAAKrC,KAAOiE,SAxE5DxF,EA4EEgF,QAAU,SAAAb,GACR,IAAMyB,EAAU,CACdrE,GAAI+D,IAAKC,KACT1B,MAAOM,EACPO,MAAO,IAET1E,EAAKkB,SAAS,SAAAC,GAAS,MAAK,CAC1BkE,MAAK,GAAA9E,OAAAtD,OAAAyI,EAAA,EAAAzI,CAAMkE,EAAUkE,OAAhB,CAAuBO,QAnFlC5F,EAuFEqE,SAAW,SAACmB,EAAQrB,GAClBnE,EAAKkB,SAAS,SAAAC,GAAS,MAAK,CAC1BkE,MAAOlE,EAAUkE,MAAMT,IAAI,SAAAhB,GAIzB,OAHIA,EAAKrC,KAAOiE,IACd5B,EAAKC,MAAQM,GAERP,QA7Ff5D,EAkGE8C,WAAa,SAAC0C,EAAQC,GACpBzF,EAAKkB,SAAS,SAAAC,GAAS,MAAK,CAC1BkE,MAAOlE,EAAUkE,MAAMT,IAAI,SAAAhB,GAIzB,OAHIA,EAAKrC,KAAOiE,IACd5B,EAAKc,MAALzH,OAAAyI,EAAA,EAAAzI,CAAiB2G,EAAKc,MAAMiB,OAAO,SAAAjF,GAAI,OAAIA,EAAKa,KAAOkE,MAElD7B,QAxGf5D,EA6GE0D,QAAU,SAAC8B,EAAQ/E,GACjBT,EAAKkB,SAAS,SAAAC,GAAS,MAAK,CAC1BkE,MAAOlE,EAAUkE,MAAMT,IAAI,SAAAhB,GACzB,GAAIA,EAAKrC,KAAOiE,EAAQ,CACtB,IAAMK,EAAU,CACdtE,GAAI+D,IAAKC,KACT5E,YAAaF,EACbK,YAAY,GAEd8C,EAAKc,MAAMoB,KAAKD,GAElB,OAAOjC,QAxHf5D,EA6HEsB,SAAW,SAACkE,EAAQO,GAClB/F,EAAKkB,SAAS,SAAAC,GAAS,MAAK,CAC1BkE,MAAOlE,EAAUkE,MAAMT,IAAI,SAAAhB,GAQzB,OAPGA,EAAKrC,KAAOiE,GACb5B,EAAKc,MAAMsB,QAAQ,SAAAtF,GACdA,EAAKa,KAAOwE,EAAYxE,KACzBb,EAAKC,YAAcoF,EAAYpF,eAI9BiD,QAvIf5D,EAAA,OAAA/C,OAAAY,EAAA,EAAAZ,CAAAmI,EAAA9H,GAAAL,OAAAa,EAAA,EAAAb,CAAAmI,EAAA,EAAArH,IAAA,SAAAC,MAAA,WA4IS,IAAAiI,EAAAzI,KACG6H,EAAU7H,KAAKgD,MAAf6E,MACR,OACE3I,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACsJ,EAAD,CAASlB,QAASxH,KAAKwH,UACvBtI,EAAAC,EAAAC,cAAA,OAAKL,UAAU,SACZ8I,EAAMT,IAAI,SAAAhB,GACT,OACElH,EAAAC,EAAAC,cAACuJ,EAAD,CACEpI,IAAK6F,EAAKrC,GACVqC,KAAMA,EACNf,qBAAsBoD,EAAKpD,qBAC3BC,WAAYmD,EAAKnD,WACjBY,QAASuC,EAAKvC,QACdpC,SAAU2E,EAAK3E,SACfkD,WAAYyB,EAAKzB,WACjBH,SAAU4B,EAAK5B,mBA5J/Be,EAAA,CAA2BpG,aCWZoH,0LATX,OACE1J,EAAAC,EAAAC,cAAA,OAAKL,UAAU,OACbG,EAAAC,EAAAC,cAACyJ,EAAD,MACA3J,EAAAC,EAAAC,cAAC0J,EAAD,cALUtH,cCDlBuH,IAASC,OAAO9J,EAAAC,EAAAC,cAAC6J,EAAD,MAASC,SAASC,eAAe","file":"static/js/main.bf75daaa.chunk.js","sourcesContent":["import React from \"react\";\n\nconst getViewBox = name => {\n  switch (name) {\n    case \"trash\":\n      return \"-3.377 0 32 32\";\n    case \"add\":\n      return \"0 0 31.714 32\";\n    case \"pencil\":\n      return \"0 0 31.311 31.92\";\n    case \"pencil-and-paper\":\n      return \"0 0 17.503 32\";\n    case \"checkmark\":\n      return \"0 0 32 32\";\n    case \"x\":\n      return \"0 0 28.246 32\";\n    default:\n      return \"0 0 32 32\";\n  }\n};\n\nconst getPath = (name, props) => {\n  switch (name) {\n    case \"trash\":\n      return (\n        <>\n          <path\n            {...props}\n            d=\"M24.752,3.076C24.296,2.43,20.25,2.283,15.58,2.424c0.092-0.661,0.243-2.061-0.051-2.333\n            c-0.389-0.36-5.514,0.436-5.812,0.908C9.52,1.317,9.589,2.192,9.655,2.733c-4.782,0.351-8.934,0.91-9.284,1.455\n            c-0.834,1.298,0,3.894,0,3.894s6.984-0.495,11.774-0.464c4.789,0.031,12.606,0.464,12.606,0.464S25.863,4.652,24.752,3.076z\"\n          />\n          <path\n            {...props}\n            d=\"M22.744,10.06c-0.495-0.556-19.405-0.494-19.9,0c-0.446,0.446-0.59,16.514,0.021,20.258c0,0,0.037,1.002,0.586,1.471\n            C4,32.255,22.803,31.91,23.201,31.164c0.142-0.264,0.229-0.535,0.291-0.789c0.031-0.062,0.057-0.195,0.076-0.393\n            c0.054-0.361,0.045-0.621,0.045-0.621C23.805,25.257,23.178,10.549,22.744,10.06z M4.92,30.425\n            c-0.066-4.071-0.229-15.387,0.024-15.792c0.31-0.494,2.658-0.371,2.968,0c0.243,0.293,0.449,11.279,0.524,15.871\n            C7.045,30.494,5.846,30.46,4.92,30.425z M11.454,30.496c-0.1-4.01-0.354-15.456,0.036-15.863c0.474-0.494,3.162-0.371,3.636,0\n            c0.367,0.289,0.679,10.938,0.799,15.65C14.023,30.412,13.107,30.475,11.454,30.496z M18.271,30.091\n            c-0.069-4.325-0.217-15.063,0.029-15.458c0.311-0.494,2.657-0.371,2.969,0c0.229,0.276,0.426,10.068,0.51,15.031\n            C20.611,29.837,19.438,29.979,18.271,30.091z\"\n          />\n        </>\n      );\n    case \"add\":\n      return (\n        <>\n          <path\n            {...props}\n            d=\"M31.714,10.039L20.41 11.675 21.024 0 9.866 2.736 10.537 13.104 0 14.629 0.689 22.177 11.107 21.9 11.761 32 19.339 32 19.884 21.668 30.003 21.4 z\"\n          />\n        </>\n      );\n    case \"pencil\":\n      return (\n        <>\n          <path\n            {...props}\n            d=\"M2.209,26.569c0,0-1.078,3.32-2.209,4.479c0,0,0.338,0.357,1.209,0.869c0,0,2.237-2.312,3.438-3.133\n            C4.648,28.787,4.301,26.084,2.209,26.569z\"\n          />\n          <path\n            {...props}\n            d=\"M30.305,4.062C26.391-3.411,19.98,1.715,19.98,1.715c8.543,2.505,7.371,13.036,7.371,13.036\n            C33.951,10.838,30.305,4.062,30.305,4.062z\"\n          />\n          <path\n            {...props}\n            d=\"M14.096,19.202c2.027-2.604,12.12-8.984,12.133-8.992c-0.438-1.187-0.944-2.162-1.488-2.966\n            c-2.797,1.178-13.249,9.877-13.249,9.877c3.717-4.964,12.103-11.259,12.116-11.27c-2.716-2.761-5.761-2.262-5.761-2.262\n            C12.734,8.257,6.18,16.194,3.714,19.244c-0.312,0.356-0.645,0.771-1.001,1.247c0,0,2.854-2.358,3.785-1.207\n            c0.934,1.152,0.657,3.457,0.657,3.457s1.865-2.358,2.964-1.152c1.097,1.206,0.383,2.854,0,3.291c0,0,1.59-1.591,1.92-0.986\n            c0.328,0.604,0.054,1.976-0.935,3.235c0,0,0.183-0.21,0.437-0.537c7.552-9.265,15.812-11.841,15.812-11.841\n            c-0.166-1.094-0.377-2.079-0.621-2.972C22.965,13.326,14.096,19.202,14.096,19.202z\"\n          />\n          <path\n            {...props}\n            d=\"M11.408,24.88c-0.057-0.438-1.289,0-1.289,0c0.19-0.438-0.083-1.617-0.604-2.275c-0.521-0.657-2.359,0.139-2.359,0.139\n            c0-0.551-0.739-1.947-1.562-2.524c-0.821-0.573-2.88,0.274-2.88,0.274c0.356,3.1-0.504,6.076-0.504,6.076\n            c4.367-1.647,2.438,2.22,2.438,2.22c2.881-1.698,6.457-1.658,6.457-1.658C11.929,25.729,11.408,24.88,11.408,24.88z\"\n          />\n        </>\n      );\n    case \"pencil-and-paper\":\n      return (\n        <>\n          <path\n            {...props}\n            d=\"M12.656,7.88L12.634 14.422 17.503 14.915z\"\n          />\n          <path\n            {...props}\n            d=\"M5.81,17.688c0,0,0.969,0.402,1.325,0c0,0,0.356-2.646,2.141-4.291V2.249c0,0-0.662-2.396-3.109-2.242\n            c-2.446,0.152-2.65,2.345-2.65,2.345s0.023,0.32,0.053,0.88c1.181,0.329,3.094,0.547,5.196-0.474c0,0-1.896,2.072-5.15,1.429\n            c0.087,2.07,0.164,5.62-0.1,9.21C3.516,13.397,5.351,14.931,5.81,17.688z\"\n                    />\n          <path\n            {...props}\n            d=\"M11.634,7.88h-1.575v6.062c-2.265,1.823-2.341,4.637-2.341,4.637c-0.453,0.444-2.406-0.097-2.406-0.097\n            c-0.582-3.057-2.565-4.542-2.565-4.542c0.177-2.114,0.232-4.213,0.229-6.062H0c0,0,0.643,12.061,0,23.553\n            c0,0,11.197,0.771,16.923,0.517l0.426-15.974l-6.092,0.095L11.634,7.88z M14.615,29.131L2.49,29.389v-1.283l12.125-1.025V29.131z\n            M14.615,26.052L2.49,26.309V24.77l12.125-1.025V26.052z M14.615,20.663v2.053L2.49,22.973v-1.283L14.615,20.663z\"\n          />\n        </>\n      );\n    case \"checkmark\":\n      return(\n        <>\n          <path\n            {...props}\n            d=\"M0,17.027c0,0,5.284,6.065,11.059,14.973c0,0,8.807-12.232,20.941-20.942L25.541,0c0,0-8.857,10.588-14.776,21.333\n\t          c0,0-4.894-6.165-8.221-9.101L0,17.027z\"\n          />\n        </>\n      );\n    case \"x\":\n      return(\n        <>\n          <path\n            {...props}\n            d=\"M16.566,15.8c2.692-2.353,5.767-4.821,9.209-7.265L19.631,0c0,0-4.992,3.971-10.194,10.627\n            C5.085,7.202,2.724,4.801,2.724,4.801L0,7.437c1.59,3.168,3.512,6.068,5.562,8.681C3.392,19.555,1.406,23.434,0,27.654l3.072,2.22\n            c0,0,2.523-3.437,7.327-8.288C17.02,28.285,23.384,32,23.384,32l4.862-9.326C23.838,20.415,19.926,18.047,16.566,15.8z\"\n          />\n        </>\n      );\n    default:\n      return <path />;\n  }\n};\n\nconst SVGIcon = ({\n  name = \"\",\n  style = {},\n  fill = \"#222\",\n  viewBox = \"\",\n  width = \"100%\",\n  className = \"svg-icon\",\n  height = \"100%\"\n}) => (\n    <svg\n      width={width}\n      style={style}\n      height={height}\n      className={className}\n      xmlns=\"http://www.w3.org/2000/svg\"\n      viewBox={viewBox || getViewBox(name)}\n      xmlnsXlink=\"http://www.w3.org/1999/xlink\"\n    >\n      {getPath(name, { fill })}\n    </svg>\n  );\n\nexport default SVGIcon;\n","import React, { Component } from 'react';\nimport SVGIcon from '../SVGIcon';\n\nexport class Header extends Component {\n  render() {\n    let date = new Date();\n    let daysOfWeek = ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'];\n    let dayOfWeek = daysOfWeek[date.getDay()];\n    let dayOfMonth = date.getDate();\n    let months = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'];\n    let month = months[date.getMonth()];\n    let year = date.getFullYear();\n    // let time = date.getTime();\n    // let hours = date.getHours();\n    // let minutes = date.getMinutes();\n\n    return (\n      <header className='app-header'>\n        <div style={verticalRedLines} />\n        <div style={appTitleStyle}>\n          {'To-Do List Manager '}\n          <SVGIcon\n            name=\"pencil-and-paper\"\n            width={25}\n            fill=\"#333\"\n            style={{\n              marginBottom: '-0.02em'\n            }}\n          />\n          <div style={dateStyle}>\n            <span className='day-of-week'>{dayOfWeek + ', '}</span>\n            <span className='month'>{month + ' '}</span>\n            <span className='day-of-month'>{dayOfMonth + ', '}</span>\n            <span className='year'>{year}</span>\n          </div>\n        </div>\n      </header>\n    )\n  }\n}\n\n// left set of red lines to imitate the appearance of paper\nconst verticalRedLines = {\n  borderLeft: '0.5px solid #ffaa9f',\n  borderRight: '0.5px solid #ffaa9f',\n  width: '0.2em',\n  height: '100vmax',\n  float: 'left',\n  marginLeft: '4em'\n}\n\n// add styling to app title so that it appears above paper's 1st line to the left\nconst appTitleStyle = {\n  color: '#666',\n  fontSize: '3em',\n  margin: '0',\n  padding: '0',\n  textIndent: '0.1em',\n  paddingTop: '0.5em',\n  lineHeight: '0.8em',\n  borderBottom: '1px solid lightblue'\n}\n\n// add styling to date so that it appears above paper's 1st line to the right\nconst dateStyle = {\n  float: 'right',\n  fontSize: '.5em',\n  marginRight: '.75em',\n  paddingTop: '1em'\n}\n\nexport default Header;\n","import React, { Component } from 'react'; // TO-DO: add createRef API\nimport PropTypes from 'prop-types';\nimport SVGIcon from \"./SVGIcon\";\n\nexport class ListItem extends Component {\n  state = {\n    itemDescription: this.props.item.description,\n    inputModeEnabled: false\n  }\n\n  crossOutCompletedItems = () => {\n    const { item } = this.props;\n    return item.isComplete ? scribbleOutItem : unscribbleOutItem;\n  }\n\n  toggleInputMode = () => {\n    this.setState(prevState => ({\n      inputModeEnabled: !prevState.inputModeEnabled\n    }));\n  }\n\n  updateItemDescription = event => {\n    const { editItem } = this.props;\n    const { id } = this.props.item;\n    const { value } = this.refs.itemDescription; \n\n    // TO-DO: update string refs to use either callback refs or createRef API\n\n    this.setState({\n      itemDescription: value\n    });\n    \n    this.toggleInputMode();\n    \n    let updatedItem = {\n      id: id,\n      description: value,\n      isComplete: false\n    }\n\n    // only seems to pass first arg but this method call is somehow allowed\n    // this is preventing state update in Lists component\n    // editItem(id, value, event);\n\n    // bundled the args into an object (hackish way to pass everything together)\n    editItem(updatedItem, event);\n  }\n\n  handleKeyPress = event => {\n    if (event.key === 'Enter') {\n      this.updateItemDescription();\n    }\n    if (event.key === 'Escape') {\n      this.toggleInputMode();\n    }\n  }\n\n  // render view (to edit item description) when input mode is enabled\n  renderItemDescriptionInputMode = () => {\n    const { itemDescription } = this.state;\n\n    // TO-DO: update string refs to use either callback refs or createRef API\n\n    return (\n      <label style={{\n        display: 'flex',\n        paddingTop: '0.6em',\n        paddingLeft: '0.38em',\n        paddingBottom: '0.07em'\n      }}>\n      \n        {/* input field to update item description */}\n        <input\n          type=\"text\"\n          defaultValue={itemDescription}\n          ref=\"itemDescription\"\n          autoFocus={true}\n          style={{\n            flex: '1',\n            border: '1px solid transparent',\n            outline: 'none',\n            background: 'transparent',\n            fontFamily: \"'Indie Flower', cursive\",\n            fontSize: '1em',\n            marginTop: '-1.4em',\n            marginBottom: '-0.8em',\n            marginLeft: '-0.04em',\n            marginRight: '-0.1em'\n          }}\n          onKeyPress={this.handleKeyPress}\n        />\n\n        {/* submit icon to confirm update */}\n        <button\n          style={{\n            // visibility: 'hidden',\n            background: 'transparent',\n            border: '1px solid transparent',\n            outline: 'none',\n            cursor: 'pointer',\n            marginTop: '-2.3em',\n            marginRight: '0.5em'\n          }}\n          onClick={this.updateItemDescription}\n        >\n          <SVGIcon name=\"checkmark\" width={21} fill=\"#333\" />\n        </button>\n\n        {/* cancel icon to end input mode */}\n        <button\n          style={{\n            // visibility: 'hidden',\n            background: 'transparent',\n            border: '1px solid transparent',\n            outline: 'none',\n            cursor: 'pointer',\n            marginTop: '-2.4em',\n            marginRight: '4em'\n          }}\n          onClick={this.toggleInputMode}\n        >\n          <SVGIcon name=\"x\" width={20} fill=\"#333\" />\n        </button>\n      </label>\n    );\n  }\n  \n  // render default view whenever input mode isn't enabled\n  renderItemDescription = () => (\n    <span onClick={this.toggleInputMode}>\n      {' ' + this.state.itemDescription}\n    </span>\n  );\n\n  render() {\n    const { inputModeEnabled } = this.state;\n    const {\n      toggleItemCompletion,\n      deleteItem\n    } = this.props;\n    const { id } = this.props.item;\n    return (\n      <div className='list-item'>\n        {/* cross out completed items */}\n        <li\n          className='item-description'\n          style={this.crossOutCompletedItems()}\n        >\n          {/* load checkbox to mark items complete / incomplete */}\n          {inputModeEnabled ? (  \n            <input\n              type='checkbox'\n              style={{\n                marginTop: '-.25em',\n                marginLeft: '.5em',\n                float: 'left'\n              }}\n              disabled={true}\n            />\n          ) : (\n            <input\n              type='checkbox'\n                style={{\n                  marginTop: '-.25em',\n                  marginLeft: '.5em',\n                  float: 'left'\n                }}\n              onChange={event => toggleItemCompletion(id, event)}\n            />\n          )}\n          {/* toggle between editing and non-editing mode views */}\n          {inputModeEnabled ?\n            this.renderItemDescriptionInputMode() :\n            this.renderItemDescription()\n          }\n          {/* load clickable SVG icon to delete item */}\n          {inputModeEnabled ? (\n            <button\n              style={{\n                // visibility: 'hidden',\n                background: 'transparent',\n                border: '1px solid transparent',\n                outline: 'none',\n                cursor: 'pointer',\n                marginTop: '-2.6em',\n                marginRight: '1.44em',\n                float: 'right'\n              }}\n              onClick={event => deleteItem(id, event)}\n            >\n              <SVGIcon name=\"trash\" width={25} fill=\"#333\" />\n            </button>\n          ) : (\n            <button\n              style={{\n                // visibility: 'hidden',\n                background: 'transparent',\n                border: '1px solid transparent',\n                outline: 'none',\n                cursor: 'pointer',\n                marginTop: '-1.6em',\n                marginRight: '1.5em',\n                float: 'right'\n              }}\n              onClick={event => deleteItem(id, event)}\n            >\n              <SVGIcon name=\"trash\" width={25} fill=\"#333\" />\n            </button>\n          )}\n          {/* load clickable SVG icon to toggle editing mode views */}\n          {inputModeEnabled ? (<></>) : (\n            <button\n              style={{\n                // visibility: 'hidden',\n                background: 'transparent',\n                border: '1px solid transparent',\n                outline: 'none',\n                cursor: 'pointer',\n                marginTop: '-1.35em',\n                marginRight: '0.1em',\n                float: 'right'\n              }}\n              onClick={this.toggleInputMode}\n            >\n              <SVGIcon name=\"pencil\" width={20} fill=\"#333\" />\n            </button>\n          )}\n        </li>\n      </div>\n    );\n  }\n}\n\n// PropTypes\nListItem.propTypes = {\n  item: PropTypes.object.isRequired\n}\n\nconst scribbleOutItem = {\n  borderBottom: '1px solid lightblue',\n  color: '#222',\n  fontSize: '1em',\n  textIndent: '0.4em',\n  paddingTop: '1.2em',\n  lineHeight: '0.7em',\n  textDecoration: 'line-through',\n  textDecorationStyle: 'wavy',\n  textDecorationColor: 'orangered',\n  transition: 'all 0.25s linear'\n}\n\nconst unscribbleOutItem = {\n  borderBottom: '1px solid lightblue',\n  color: '#222',\n  fontSize: '1em',\n  textIndent: '0.4em',\n  paddingTop: '1.2em',\n  lineHeight: '0.7em',\n  textDecoration: 'line-through',\n  textDecorationStyle: 'wavy',\n  textDecorationColor: 'transparent',\n  transition: 'all 0.25s linear'\n}\n\nexport default ListItem;\n","import React, { Component } from 'react';\nimport SVGIcon from \"./SVGIcon\";\n\nexport class AddItem extends Component {\n  state = {\n    description: ''\n  }\n\n  onChange = event => {\n    this.setState({\n      [event.target.name]: event.target.value\n    });\n  }\n\n  onSubmit = event => {\n    event.preventDefault();\n    const { addItem } = this.props;\n    const { description } = this.state;\n    addItem(description, event);\n    this.setState({\n      description: ''\n    });\n  }\n\n  render() {\n    const { description } = this.state;\n    const { label } = this.props.list;\n    const placeholder = 'Add a to-do item to the ' + label + ' list.';\n    return (\n      <div\n        style={insertNewItemStyle}\n      >\n        <form\n          onSubmit={this.onSubmit}\n          style={insertNewItemFormStyle} \n          className='insert-new-item'\n        >\n          <input\n            type='text'\n            style={insertNewItemInputStyle}\n            name='description'\n            placeholder={placeholder}\n            value={description}\n            onChange={this.onChange}\n          />\n          <label>\n            <input type='submit' value='+' />\n            <SVGIcon\n              name=\"add\"\n              width={25}\n              fill=\"#333\"\n              style={insertButtonStyle}\n            />\n          </label>\n        </form>\n      </div>\n    )\n  }\n}\n\nconst insertNewItemStyle = {\n  paddingTop: '.75em',\n  paddingBottom: '0.1em'\n}\n\nconst insertNewItemFormStyle = {\n  display: 'flex',\n  marginBottom: '-0.5em'\n}\n\nconst insertNewItemInputStyle = {\n  flex: '1',\n  background: 'transparent',\n  fontFamily: \"'Indie Flower', cursive\",\n  fontSize: '1em',\n  paddingLeft: '0.5em',\n  outline: 'none',\n  border: '1px solid transparent'\n}\n\nconst insertButtonStyle = {\n  background: 'transparent',\n  border: '1px solid transparent',\n  outline: 'none',\n  cursor: 'pointer',\n  marginTop: '-0.6em',\n  marginRight: '1.05em',\n  marginLeft: '0.5em',\n  float: 'right'\n}\n\nexport default AddItem;\n","import React, { Component } from 'react'; // TO-DO: add createRef API\nimport PropTypes from 'prop-types';\nimport ListItem from './ListItem';\nimport AddItem from './AddItem';\nimport SVGIcon from './SVGIcon';\n\nexport class List extends Component {\n\n  state = {\n    listLabel: this.props.list.label,\n    inputModeEnabled: false\n  }\n\n  toggleInputMode = () => {\n    this.setState(prevState => ({\n      inputModeEnabled: !prevState.inputModeEnabled\n    }));\n  }\n\n  updateListLabel = event => {\n    const { editList } = this.props;\n    const { id } = this.props.list;\n    const { value } = this.refs.listLabel;\n\n    this.setState({\n      listLabel: value\n    });\n    \n    this.toggleInputMode();\n    \n    editList(id, value, event);\n  }\n\n  handleKeyPress = event => {\n    if (event.key === 'Enter') {\n      this.updateListLabel(event);\n    }\n    if (event.key === 'Escape') {\n      this.toggleInputMode();\n    }\n  }\n\n  // render view (to edit list label) when input mode is enabled\n  renderListLabelInputMode = () => {\n    const { listLabel } = this.state;\n    return (\n      <label style={{\n        display: 'flex'\n      }}>\n        {/* input field to update list label */}\n        <input\n          type=\"text\"\n          defaultValue={listLabel}\n          ref=\"listLabel\"\n          autoFocus={true}\n          style={{\n            flex: '1',\n            border: '1px solid transparent',\n            outline: 'none',\n            background: 'transparent',\n            fontFamily: \"'Indie Flower', cursive\",\n            fontSize: '1em',\n            paddingLeft: '0.2em',\n            paddingBottom: '0.1em',\n            marginTop: '-1em',\n            marginBottom: '-1.1em',\n            marginLeft: '-0.04em'\n          }}\n          onKeyPress={event => this.handleKeyPress(event)}\n        />\n        {/* submit icon */}\n        <button\n          style={{\n            background: 'transparent',\n            border: '1px solid transparent',\n            outline: 'none',\n            cursor: 'pointer',\n            marginTop: '-1em',\n            marginRight: '0.4em'\n          }}\n          onClick={event => this.updateListLabel(event)}\n        >\n          <SVGIcon name=\"checkmark\" width={20} fill=\"#333\" />\n        </button>\n        {/* cancel icon */}\n        <button\n          style={{\n            background: 'transparent',\n            border: '1px solid transparent',\n            outline: 'none',\n            cursor: 'pointer',\n            marginTop: '-1em',\n            marginRight: '4.1em',\n            float: 'right'\n          }}\n          onClick={this.toggleInputMode}\n        >\n          <SVGIcon name=\"x\" width={20} fill=\"#333\" />\n        </button>\n      </label>\n    );\n  }\n\n  // render default view whenever input mode isn't enabled\n  renderListLabel = () => (\n    <span onClick={this.toggleInputMode}>\n      {this.state.listLabel}\n    </span>\n  );\n\n  render() {\n    const {\n      list,\n      toggleItemCompletion,\n      addItem,\n      deleteItem,\n      editItem,\n      deleteList,\n    } = this.props;\n    const { inputModeEnabled } = this.state;\n    const { id, items } = this.props.list;\n    return (\n      <div className='list' style={{\n        margin: '0',\n        padding: '0',\n        lineHeight: '2em'\n      }}>\n        <ul style={{\n          border: '1px solid transparent',\n          listStyle: 'none',\n          margin: '0',\n          padding: '0',\n          borderBottom: '1px solid lightblue'\n        }}>\n          <li className='list-label' style={{\n            borderBottom: '1px solid lightblue',\n            color: '#444',\n            fontSize: '1.5em',\n            textIndent: '0.2em',\n            paddingTop: '0.6em',\n            lineHeight: '0.7em'\n          }}>\n            {inputModeEnabled ? \n              this.renderListLabelInputMode() :\n              this.renderListLabel()\n            }\n            {/* delete icon to remove list and its items */}\n            {inputModeEnabled ? (\n              <button\n                style={{\n                  background: 'transparent',\n                  border: '1px solid transparent',\n                  outline: 'none',\n                  cursor: 'pointer',\n                  marginTop: '-2.6em',\n                  marginRight: '1.5em',\n                  float: 'right'\n                }}\n                onClick={event => deleteList(id, event)}\n              >\n                <SVGIcon name=\"trash\" width={25} fill=\"#333\" />\n              </button>\n            ) : (\n              <button\n                  style={{\n                    background: 'transparent',\n                    border: '1px solid transparent',\n                    outline: 'none',\n                    cursor: 'pointer',\n                    marginTop: '-1.2em',\n                    marginRight: '1.5em',\n                    float: 'right'\n                  }}\n                onClick={event => deleteList(id, event)}\n              >\n                <SVGIcon name=\"trash\" width={25} fill=\"#333\" />\n              </button>\n            )}\n            {/* edit icon to enter input mode for updating list label */}\n            {inputModeEnabled ? (<></>) : (\n              <button\n                style={{\n                  background: 'transparent',\n                  border: '1px solid transparent',\n                  outline: 'none',\n                  cursor: 'pointer',\n                  marginTop: '-1em',\n                  marginRight: '0em',\n                  float: 'right'\n                }}\n                onClick={this.toggleInputMode}\n              >\n                <SVGIcon name=\"pencil\" width={23} fill=\"#333\" />\n              </button>\n            )}\n          </li>\n          <div className='list-items'>\n            <ul style={{\n              listStyle: 'none'\n            }}>\n              {items.map(item => {\n                return (\n                  <ListItem\n                    key={item.id}\n                    item={item}\n                    toggleItemCompletion={event => toggleItemCompletion(id, event)}\n                    deleteItem={event => deleteItem(id, event)}\n                    editItem={event => editItem(id, event)}\n                  />\n                );\n              })}\n            </ul>\n          </div>\n          <li>\n            <AddItem\n              list={list}\n              addItem={event => addItem(id, event)}\n            />\n          </li>\n        </ul>\n      </div>\n    );\n  }\n}\n\n// PropTypes\nList.propTypes = {\n  list: PropTypes.object.isRequired\n}\n\nexport default List;","import React, { Component } from 'react';\nimport SVGIcon from \"./SVGIcon\";\n\nexport class AddList extends Component {\n  state = {\n    label: ''\n  }\n\n  onChange = event => {\n    this.setState({\n      [event.target.name]: event.target.value\n    });\n  }\n\n  onSubmit = event => {\n    event.preventDefault();\n    const { addList } = this.props;\n    const { label } = this.state;\n    addList(label);\n    this.setState({\n      label: ''\n    });\n  }\n\n  render() {\n    const { label } = this.state;\n    const placeholder = 'Click here to enter a new to-do list category.';\n    return (\n      <div\n        style={insertNewListStyle}\n        className='insert-new-list'\n      >\n        <form\n          onSubmit={this.onSubmit}\n          style={insertNewListFormStyle}\n        >\n          <input\n            type='text'\n            style={insertNewListInputStyle}\n            name='label'\n            placeholder={placeholder}\n            value={label}\n            onChange={this.onChange}\n          />\n          <label>\n            <input\n              type='submit'\n              value='+'\n            />\n            <SVGIcon\n              name=\"add\"\n              width={25}\n              fill=\"#333\"\n              style={insertButtonStyle}\n            />\n          </label>\n        </form>\n      </div>\n    );\n  }\n}\n\nconst insertNewListStyle = {\n  paddingTop: '.75em',\n  paddingBottom: '0.1em',\n  borderBottom: '1px solid lightblue'\n}\n\nconst insertNewListFormStyle = {\n  display: 'flex',\n  marginBottom: '-0.5em'\n}\n\nconst insertNewListInputStyle = {\n  flex: '1',\n  background: 'transparent',\n  fontFamily: \"'Indie Flower', cursive\",\n  fontSize: '1em',\n  paddingLeft: '0.5em',\n  outline: 'none',\n  border: 'none'\n}\n\nconst insertButtonStyle = {\n  // visibility: 'hidden',\n  background: 'transparent',\n  border: '1px solid transparent',\n  outline: 'none',\n  cursor: 'pointer',\n  marginTop: '-1em',\n  marginRight: '1.1em',\n  marginLeft: '0.5em'\n}\n\nexport default AddList;\n","import React, { Component } from 'react';\nimport uuid from 'uuid';\nimport List from './List';\nimport AddList from './AddList';\n\nexport class Lists extends Component {\n\n  state = {\n    lists: [{\n      id: uuid.v4(),\n      label: 'Personal',\n      items: [{\n        id: uuid.v4(),\n        description: 'Do laundry and fold clothes.',\n        isComplete: false\n      }, {\n        id: uuid.v4(),\n        description: 'Shovel snow off driveway and pour salt.',\n        isComplete: false\n      }, {\n        id: uuid.v4(),\n        description: 'Take car to get oil change and smog check.',\n        isComplete: false\n      }, {\n        id: uuid.v4(),\n        description: 'Prep lunch meals for week.',\n        isComplete: false\n      }]\n    }, {\n      id: uuid.v4(),\n      label: 'Family',\n      items: [{\n        id: uuid.v4(),\n        description: \"Send flowers to wife for Valentine's Day.\",\n        isComplete: false\n      }, {\n        id: uuid.v4(),\n        description: \"Make appointment with son's teacher.\",\n        isComplete: false\n      }]\n    }, {\n      id: uuid.v4(),\n      label: 'Work',\n      items: [{\n        id: uuid.v4(),\n        description: 'Respond to new emails.',\n        isComplete: false\n      }, {\n        id: uuid.v4(),\n        description: 'Follow up on existing tickets.',\n        isComplete: false\n      }, {\n        id: uuid.v4(),\n        description: 'Setup 1-on-1 meeting with manager.',\n        isComplete: false\n      }]\n    }]\n  }\n\n  toggleItemCompletion = (listId, itemId) => {\n    this.setState(prevState => ({\n      lists: prevState.lists.map(list => {\n        if (list.id === listId) {\n          list.items.map(item => {\n            if (item.id === itemId) {\n              item.isComplete = !item.isComplete;\n            }\n            return item;\n          });\n        }\n        return list;\n      })\n    }));\n  }\n\n  deleteList = listId => {\n    this.setState(prevState => ({\n      lists: [...prevState.lists.filter(list => list.id !== listId)]\n    }));\n  }\n\n  addList = listLabel => {\n    const newList = {\n      id: uuid.v4(),\n      label: listLabel,\n      items: []\n    }\n    this.setState(prevState => ({\n      lists: [...prevState.lists, newList]\n    }));\n  }\n\n  editList = (listId, listLabel) => {\n    this.setState(prevState => ({\n      lists: prevState.lists.map(list => {\n        if (list.id === listId) {\n          list.label = listLabel;\n        }\n        return list;\n      })\n    }));\n  }\n\n  deleteItem = (listId, itemId) => {\n    this.setState(prevState => ({\n      lists: prevState.lists.map(list => {\n        if (list.id === listId) {\n          list.items = [...list.items.filter(item => item.id !== itemId)];\n        }\n        return list;\n      })\n    }));\n  }\n\n  addItem = (listId, itemDescription) => {\n    this.setState(prevState => ({\n      lists: prevState.lists.map(list => {\n        if (list.id === listId) {\n          const newItem = {\n            id: uuid.v4(),\n            description: itemDescription,\n            isComplete: false\n          }\n          list.items.push(newItem);\n        }\n        return list;\n      })\n    }));\n  }\n\n  editItem = (listId, updatedItem) => {\n    this.setState(prevState => ({\n      lists: prevState.lists.map(list => {\n        if(list.id === listId) {\n          list.items.forEach(item => {\n            if(item.id === updatedItem.id) {\n              item.description = updatedItem.description;\n            }\n          });\n        }\n        return list;\n      })\n    }))\n  }\n\nrender() {\n    const { lists } = this.state;\n    return (\n      <div>\n        <AddList addList={this.addList} />\n        <div className='lists'>\n          {lists.map(list => {\n            return (\n              <List\n                key={list.id}\n                list={list}\n                toggleItemCompletion={this.toggleItemCompletion}\n                deleteItem={this.deleteItem}\n                addItem={this.addItem}\n                editItem={this.editItem}\n                deleteList={this.deleteList}\n                editList={this.editList}\n              />\n            );\n          })}\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default Lists;\n","import React, { Component } from 'react';\nimport Header from './layout/Header';\nimport Lists from './Lists';\nimport './App.css';\n\nclass App extends Component {\n  render() {\n    return (\n      <div className='app'>\n        <Header />\n        <Lists />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\n\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}